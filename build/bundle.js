/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 39);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;/* Riot v2.6.7, @license MIT */\n\n;(function(window, undefined) {\n  'use strict';\nvar riot = { version: 'v2.6.7', settings: {} },\n  // be aware, internal usage\n  // ATTENTION: prefix the global dynamic variables with `__`\n\n  // counter to give a unique id to all the Tag instances\n  __uid = 0,\n  // tags instances cache\n  __virtualDom = [],\n  // tags implementation cache\n  __tagImpl = {},\n\n  /**\n   * Const\n   */\n  GLOBAL_MIXIN = '__global_mixin',\n\n  // riot specific prefixes\n  RIOT_PREFIX = 'riot-',\n  RIOT_TAG = RIOT_PREFIX + 'tag',\n  RIOT_TAG_IS = 'data-is',\n\n  // for typeof == '' comparisons\n  T_STRING = 'string',\n  T_OBJECT = 'object',\n  T_UNDEF  = 'undefined',\n  T_FUNCTION = 'function',\n  XLINK_NS = 'http://www.w3.org/1999/xlink',\n  XLINK_REGEX = /^xlink:(\\w+)/,\n  // special native tags that cannot be treated like the others\n  SPECIAL_TAGS_REGEX = /^(?:t(?:body|head|foot|[rhd])|caption|col(?:group)?|opt(?:ion|group))$/,\n  RESERVED_WORDS_BLACKLIST = /^(?:_(?:item|id|parent)|update|root|(?:un)?mount|mixin|is(?:Mounted|Loop)|tags|parent|opts|trigger|o(?:n|ff|ne))$/,\n  // SVG tags list https://www.w3.org/TR/SVG/attindex.html#PresentationAttributes\n  SVG_TAGS_LIST = ['altGlyph', 'animate', 'animateColor', 'circle', 'clipPath', 'defs', 'ellipse', 'feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feFlood', 'feGaussianBlur', 'feImage', 'feMerge', 'feMorphology', 'feOffset', 'feSpecularLighting', 'feTile', 'feTurbulence', 'filter', 'font', 'foreignObject', 'g', 'glyph', 'glyphRef', 'image', 'line', 'linearGradient', 'marker', 'mask', 'missing-glyph', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'svg', 'switch', 'symbol', 'text', 'textPath', 'tref', 'tspan', 'use'],\n\n  // version# for IE 8-11, 0 for others\n  IE_VERSION = (window && window.document || {}).documentMode | 0,\n\n  // detect firefox to fix #1374\n  FIREFOX = window && !!window.InstallTrigger\n/* istanbul ignore next */\nriot.observable = function(el) {\n\n  /**\n   * Extend the original object or create a new empty one\n   * @type { Object }\n   */\n\n  el = el || {}\n\n  /**\n   * Private variables\n   */\n  var callbacks = {},\n    slice = Array.prototype.slice\n\n  /**\n   * Private Methods\n   */\n\n  /**\n   * Helper function needed to get and loop all the events in a string\n   * @param   { String }   e - event string\n   * @param   {Function}   fn - callback\n   */\n  function onEachEvent(e, fn) {\n    var es = e.split(' '), l = es.length, i = 0\n    for (; i < l; i++) {\n      var name = es[i]\n      if (name) fn(name, i)\n    }\n  }\n\n  /**\n   * Public Api\n   */\n\n  // extend the el object adding the observable methods\n  Object.defineProperties(el, {\n    /**\n     * Listen to the given space separated list of `events` and\n     * execute the `callback` each time an event is triggered.\n     * @param  { String } events - events ids\n     * @param  { Function } fn - callback function\n     * @returns { Object } el\n     */\n    on: {\n      value: function(events, fn) {\n        if (typeof fn != 'function')  return el\n\n        onEachEvent(events, function(name, pos) {\n          (callbacks[name] = callbacks[name] || []).push(fn)\n          fn.typed = pos > 0\n        })\n\n        return el\n      },\n      enumerable: false,\n      writable: false,\n      configurable: false\n    },\n\n    /**\n     * Removes the given space separated list of `events` listeners\n     * @param   { String } events - events ids\n     * @param   { Function } fn - callback function\n     * @returns { Object } el\n     */\n    off: {\n      value: function(events, fn) {\n        if (events == '*' && !fn) callbacks = {}\n        else {\n          onEachEvent(events, function(name, pos) {\n            if (fn) {\n              var arr = callbacks[name]\n              for (var i = 0, cb; cb = arr && arr[i]; ++i) {\n                if (cb == fn) arr.splice(i--, 1)\n              }\n            } else delete callbacks[name]\n          })\n        }\n        return el\n      },\n      enumerable: false,\n      writable: false,\n      configurable: false\n    },\n\n    /**\n     * Listen to the given space separated list of `events` and\n     * execute the `callback` at most once\n     * @param   { String } events - events ids\n     * @param   { Function } fn - callback function\n     * @returns { Object } el\n     */\n    one: {\n      value: function(events, fn) {\n        function on() {\n          el.off(events, on)\n          fn.apply(el, arguments)\n        }\n        return el.on(events, on)\n      },\n      enumerable: false,\n      writable: false,\n      configurable: false\n    },\n\n    /**\n     * Execute all callback functions that listen to\n     * the given space separated list of `events`\n     * @param   { String } events - events ids\n     * @returns { Object } el\n     */\n    trigger: {\n      value: function(events) {\n\n        // getting the arguments\n        var arglen = arguments.length - 1,\n          args = new Array(arglen),\n          fns\n\n        for (var i = 0; i < arglen; i++) {\n          args[i] = arguments[i + 1] // skip first argument\n        }\n\n        onEachEvent(events, function(name, pos) {\n\n          fns = slice.call(callbacks[name] || [], 0)\n\n          for (var i = 0, fn; fn = fns[i]; ++i) {\n            if (fn.busy) continue\n            fn.busy = 1\n            fn.apply(el, fn.typed ? [name].concat(args) : args)\n            if (fns[i] !== fn) { i-- }\n            fn.busy = 0\n          }\n\n          if (callbacks['*'] && name != '*')\n            el.trigger.apply(el, ['*', name].concat(args))\n\n        })\n\n        return el\n      },\n      enumerable: false,\n      writable: false,\n      configurable: false\n    }\n  })\n\n  return el\n\n}\n/* istanbul ignore next */\n;(function(riot) {\n\n/**\n * Simple client-side router\n * @module riot-route\n */\n\n\nvar RE_ORIGIN = /^.+?\\/\\/+[^\\/]+/,\n  EVENT_LISTENER = 'EventListener',\n  REMOVE_EVENT_LISTENER = 'remove' + EVENT_LISTENER,\n  ADD_EVENT_LISTENER = 'add' + EVENT_LISTENER,\n  HAS_ATTRIBUTE = 'hasAttribute',\n  REPLACE = 'replace',\n  POPSTATE = 'popstate',\n  HASHCHANGE = 'hashchange',\n  TRIGGER = 'trigger',\n  MAX_EMIT_STACK_LEVEL = 3,\n  win = typeof window != 'undefined' && window,\n  doc = typeof document != 'undefined' && document,\n  hist = win && history,\n  loc = win && (hist.location || win.location), // see html5-history-api\n  prot = Router.prototype, // to minify more\n  clickEvent = doc && doc.ontouchstart ? 'touchstart' : 'click',\n  started = false,\n  central = riot.observable(),\n  routeFound = false,\n  debouncedEmit,\n  base, current, parser, secondParser, emitStack = [], emitStackLevel = 0\n\n/**\n * Default parser. You can replace it via router.parser method.\n * @param {string} path - current path (normalized)\n * @returns {array} array\n */\nfunction DEFAULT_PARSER(path) {\n  return path.split(/[/?#]/)\n}\n\n/**\n * Default parser (second). You can replace it via router.parser method.\n * @param {string} path - current path (normalized)\n * @param {string} filter - filter string (normalized)\n * @returns {array} array\n */\nfunction DEFAULT_SECOND_PARSER(path, filter) {\n  var re = new RegExp('^' + filter[REPLACE](/\\*/g, '([^/?#]+?)')[REPLACE](/\\.\\./, '.*') + '$'),\n    args = path.match(re)\n\n  if (args) return args.slice(1)\n}\n\n/**\n * Simple/cheap debounce implementation\n * @param   {function} fn - callback\n * @param   {number} delay - delay in seconds\n * @returns {function} debounced function\n */\nfunction debounce(fn, delay) {\n  var t\n  return function () {\n    clearTimeout(t)\n    t = setTimeout(fn, delay)\n  }\n}\n\n/**\n * Set the window listeners to trigger the routes\n * @param {boolean} autoExec - see route.start\n */\nfunction start(autoExec) {\n  debouncedEmit = debounce(emit, 1)\n  win[ADD_EVENT_LISTENER](POPSTATE, debouncedEmit)\n  win[ADD_EVENT_LISTENER](HASHCHANGE, debouncedEmit)\n  doc[ADD_EVENT_LISTENER](clickEvent, click)\n  if (autoExec) emit(true)\n}\n\n/**\n * Router class\n */\nfunction Router() {\n  this.$ = []\n  riot.observable(this) // make it observable\n  central.on('stop', this.s.bind(this))\n  central.on('emit', this.e.bind(this))\n}\n\nfunction normalize(path) {\n  return path[REPLACE](/^\\/|\\/$/, '')\n}\n\nfunction isString(str) {\n  return typeof str == 'string'\n}\n\n/**\n * Get the part after domain name\n * @param {string} href - fullpath\n * @returns {string} path from root\n */\nfunction getPathFromRoot(href) {\n  return (href || loc.href)[REPLACE](RE_ORIGIN, '')\n}\n\n/**\n * Get the part after base\n * @param {string} href - fullpath\n * @returns {string} path from base\n */\nfunction getPathFromBase(href) {\n  return base[0] == '#'\n    ? (href || loc.href || '').split(base)[1] || ''\n    : (loc ? getPathFromRoot(href) : href || '')[REPLACE](base, '')\n}\n\nfunction emit(force) {\n  // the stack is needed for redirections\n  var isRoot = emitStackLevel == 0, first\n  if (MAX_EMIT_STACK_LEVEL <= emitStackLevel) return\n\n  emitStackLevel++\n  emitStack.push(function() {\n    var path = getPathFromBase()\n    if (force || path != current) {\n      central[TRIGGER]('emit', path)\n      current = path\n    }\n  })\n  if (isRoot) {\n    while (first = emitStack.shift()) first() // stack increses within this call\n    emitStackLevel = 0\n  }\n}\n\nfunction click(e) {\n  if (\n    e.which != 1 // not left click\n    || e.metaKey || e.ctrlKey || e.shiftKey // or meta keys\n    || e.defaultPrevented // or default prevented\n  ) return\n\n  var el = e.target\n  while (el && el.nodeName != 'A') el = el.parentNode\n\n  if (\n    !el || el.nodeName != 'A' // not A tag\n    || el[HAS_ATTRIBUTE]('download') // has download attr\n    || !el[HAS_ATTRIBUTE]('href') // has no href attr\n    || el.target && el.target != '_self' // another window or frame\n    || el.href.indexOf(loc.href.match(RE_ORIGIN)[0]) == -1 // cross origin\n  ) return\n\n  if (el.href != loc.href\n    && (\n      el.href.split('#')[0] == loc.href.split('#')[0] // internal jump\n      || base[0] != '#' && getPathFromRoot(el.href).indexOf(base) !== 0 // outside of base\n      || base[0] == '#' && el.href.split(base)[0] != loc.href.split(base)[0] // outside of #base\n      || !go(getPathFromBase(el.href), el.title || doc.title) // route not found\n    )) return\n\n  e.preventDefault()\n}\n\n/**\n * Go to the path\n * @param {string} path - destination path\n * @param {string} title - page title\n * @param {boolean} shouldReplace - use replaceState or pushState\n * @returns {boolean} - route not found flag\n */\nfunction go(path, title, shouldReplace) {\n  // Server-side usage: directly execute handlers for the path\n  if (!hist) return central[TRIGGER]('emit', getPathFromBase(path))\n\n  path = base + normalize(path)\n  title = title || doc.title\n  // browsers ignores the second parameter `title`\n  shouldReplace\n    ? hist.replaceState(null, title, path)\n    : hist.pushState(null, title, path)\n  // so we need to set it manually\n  doc.title = title\n  routeFound = false\n  emit()\n  return routeFound\n}\n\n/**\n * Go to path or set action\n * a single string:                go there\n * two strings:                    go there with setting a title\n * two strings and boolean:        replace history with setting a title\n * a single function:              set an action on the default route\n * a string/RegExp and a function: set an action on the route\n * @param {(string|function)} first - path / action / filter\n * @param {(string|RegExp|function)} second - title / action\n * @param {boolean} third - replace flag\n */\nprot.m = function(first, second, third) {\n  if (isString(first) && (!second || isString(second))) go(first, second, third || false)\n  else if (second) this.r(first, second)\n  else this.r('@', first)\n}\n\n/**\n * Stop routing\n */\nprot.s = function() {\n  this.off('*')\n  this.$ = []\n}\n\n/**\n * Emit\n * @param {string} path - path\n */\nprot.e = function(path) {\n  this.$.concat('@').some(function(filter) {\n    var args = (filter == '@' ? parser : secondParser)(normalize(path), normalize(filter))\n    if (typeof args != 'undefined') {\n      this[TRIGGER].apply(null, [filter].concat(args))\n      return routeFound = true // exit from loop\n    }\n  }, this)\n}\n\n/**\n * Register route\n * @param {string} filter - filter for matching to url\n * @param {function} action - action to register\n */\nprot.r = function(filter, action) {\n  if (filter != '@') {\n    filter = '/' + normalize(filter)\n    this.$.push(filter)\n  }\n  this.on(filter, action)\n}\n\nvar mainRouter = new Router()\nvar route = mainRouter.m.bind(mainRouter)\n\n/**\n * Create a sub router\n * @returns {function} the method of a new Router object\n */\nroute.create = function() {\n  var newSubRouter = new Router()\n  // assign sub-router's main method\n  var router = newSubRouter.m.bind(newSubRouter)\n  // stop only this sub-router\n  router.stop = newSubRouter.s.bind(newSubRouter)\n  return router\n}\n\n/**\n * Set the base of url\n * @param {(str|RegExp)} arg - a new base or '#' or '#!'\n */\nroute.base = function(arg) {\n  base = arg || '#'\n  current = getPathFromBase() // recalculate current path\n}\n\n/** Exec routing right now **/\nroute.exec = function() {\n  emit(true)\n}\n\n/**\n * Replace the default router to yours\n * @param {function} fn - your parser function\n * @param {function} fn2 - your secondParser function\n */\nroute.parser = function(fn, fn2) {\n  if (!fn && !fn2) {\n    // reset parser for testing...\n    parser = DEFAULT_PARSER\n    secondParser = DEFAULT_SECOND_PARSER\n  }\n  if (fn) parser = fn\n  if (fn2) secondParser = fn2\n}\n\n/**\n * Helper function to get url query as an object\n * @returns {object} parsed query\n */\nroute.query = function() {\n  var q = {}\n  var href = loc.href || current\n  href[REPLACE](/[?&](.+?)=([^&]*)/g, function(_, k, v) { q[k] = v })\n  return q\n}\n\n/** Stop routing **/\nroute.stop = function () {\n  if (started) {\n    if (win) {\n      win[REMOVE_EVENT_LISTENER](POPSTATE, debouncedEmit)\n      win[REMOVE_EVENT_LISTENER](HASHCHANGE, debouncedEmit)\n      doc[REMOVE_EVENT_LISTENER](clickEvent, click)\n    }\n    central[TRIGGER]('stop')\n    started = false\n  }\n}\n\n/**\n * Start routing\n * @param {boolean} autoExec - automatically exec after starting if true\n */\nroute.start = function (autoExec) {\n  if (!started) {\n    if (win) {\n      if (document.readyState == 'complete') start(autoExec)\n      // the timeout is needed to solve\n      // a weird safari bug https://github.com/riot/route/issues/33\n      else win[ADD_EVENT_LISTENER]('load', function() {\n        setTimeout(function() { start(autoExec) }, 1)\n      })\n    }\n    started = true\n  }\n}\n\n/** Prepare the router **/\nroute.base()\nroute.parser()\n\nriot.route = route\n})(riot)\n/* istanbul ignore next */\n\n/**\n * The riot template engine\n * @version v2.4.2\n */\n/**\n * riot.util.brackets\n *\n * - `brackets    ` - Returns a string or regex based on its parameter\n * - `brackets.set` - Change the current riot brackets\n *\n * @module\n */\n\nvar brackets = (function (UNDEF) {\n\n  var\n    REGLOB = 'g',\n\n    R_MLCOMMS = /\\/\\*[^*]*\\*+(?:[^*\\/][^*]*\\*+)*\\//g,\n\n    R_STRINGS = /\"[^\"\\\\]*(?:\\\\[\\S\\s][^\"\\\\]*)*\"|'[^'\\\\]*(?:\\\\[\\S\\s][^'\\\\]*)*'/g,\n\n    S_QBLOCKS = R_STRINGS.source + '|' +\n      /(?:\\breturn\\s+|(?:[$\\w\\)\\]]|\\+\\+|--)\\s*(\\/)(?![*\\/]))/.source + '|' +\n      /\\/(?=[^*\\/])[^[\\/\\\\]*(?:(?:\\[(?:\\\\.|[^\\]\\\\]*)*\\]|\\\\.)[^[\\/\\\\]*)*?(\\/)[gim]*/.source,\n\n    UNSUPPORTED = RegExp('[\\\\' + 'x00-\\\\x1F<>a-zA-Z0-9\\'\",;\\\\\\\\]'),\n\n    NEED_ESCAPE = /(?=[[\\]()*+?.^$|])/g,\n\n    FINDBRACES = {\n      '(': RegExp('([()])|'   + S_QBLOCKS, REGLOB),\n      '[': RegExp('([[\\\\]])|' + S_QBLOCKS, REGLOB),\n      '{': RegExp('([{}])|'   + S_QBLOCKS, REGLOB)\n    },\n\n    DEFAULT = '{ }'\n\n  var _pairs = [\n    '{', '}',\n    '{', '}',\n    /{[^}]*}/,\n    /\\\\([{}])/g,\n    /\\\\({)|{/g,\n    RegExp('\\\\\\\\(})|([[({])|(})|' + S_QBLOCKS, REGLOB),\n    DEFAULT,\n    /^\\s*{\\^?\\s*([$\\w]+)(?:\\s*,\\s*(\\S+))?\\s+in\\s+(\\S.*)\\s*}/,\n    /(^|[^\\\\]){=[\\S\\s]*?}/\n  ]\n\n  var\n    cachedBrackets = UNDEF,\n    _regex,\n    _cache = [],\n    _settings\n\n  function _loopback (re) { return re }\n\n  function _rewrite (re, bp) {\n    if (!bp) bp = _cache\n    return new RegExp(\n      re.source.replace(/{/g, bp[2]).replace(/}/g, bp[3]), re.global ? REGLOB : ''\n    )\n  }\n\n  function _create (pair) {\n    if (pair === DEFAULT) return _pairs\n\n    var arr = pair.split(' ')\n\n    if (arr.length !== 2 || UNSUPPORTED.test(pair)) {\n      throw new Error('Unsupported brackets \"' + pair + '\"')\n    }\n    arr = arr.concat(pair.replace(NEED_ESCAPE, '\\\\').split(' '))\n\n    arr[4] = _rewrite(arr[1].length > 1 ? /{[\\S\\s]*?}/ : _pairs[4], arr)\n    arr[5] = _rewrite(pair.length > 3 ? /\\\\({|})/g : _pairs[5], arr)\n    arr[6] = _rewrite(_pairs[6], arr)\n    arr[7] = RegExp('\\\\\\\\(' + arr[3] + ')|([[({])|(' + arr[3] + ')|' + S_QBLOCKS, REGLOB)\n    arr[8] = pair\n    return arr\n  }\n\n  function _brackets (reOrIdx) {\n    return reOrIdx instanceof RegExp ? _regex(reOrIdx) : _cache[reOrIdx]\n  }\n\n  _brackets.split = function split (str, tmpl, _bp) {\n    // istanbul ignore next: _bp is for the compiler\n    if (!_bp) _bp = _cache\n\n    var\n      parts = [],\n      match,\n      isexpr,\n      start,\n      pos,\n      re = _bp[6]\n\n    isexpr = start = re.lastIndex = 0\n\n    while ((match = re.exec(str))) {\n\n      pos = match.index\n\n      if (isexpr) {\n\n        if (match[2]) {\n          re.lastIndex = skipBraces(str, match[2], re.lastIndex)\n          continue\n        }\n        if (!match[3]) {\n          continue\n        }\n      }\n\n      if (!match[1]) {\n        unescapeStr(str.slice(start, pos))\n        start = re.lastIndex\n        re = _bp[6 + (isexpr ^= 1)]\n        re.lastIndex = start\n      }\n    }\n\n    if (str && start < str.length) {\n      unescapeStr(str.slice(start))\n    }\n\n    return parts\n\n    function unescapeStr (s) {\n      if (tmpl || isexpr) {\n        parts.push(s && s.replace(_bp[5], '$1'))\n      } else {\n        parts.push(s)\n      }\n    }\n\n    function skipBraces (s, ch, ix) {\n      var\n        match,\n        recch = FINDBRACES[ch]\n\n      recch.lastIndex = ix\n      ix = 1\n      while ((match = recch.exec(s))) {\n        if (match[1] &&\n          !(match[1] === ch ? ++ix : --ix)) break\n      }\n      return ix ? s.length : recch.lastIndex\n    }\n  }\n\n  _brackets.hasExpr = function hasExpr (str) {\n    return _cache[4].test(str)\n  }\n\n  _brackets.loopKeys = function loopKeys (expr) {\n    var m = expr.match(_cache[9])\n\n    return m\n      ? { key: m[1], pos: m[2], val: _cache[0] + m[3].trim() + _cache[1] }\n      : { val: expr.trim() }\n  }\n\n  _brackets.array = function array (pair) {\n    return pair ? _create(pair) : _cache\n  }\n\n  function _reset (pair) {\n    if ((pair || (pair = DEFAULT)) !== _cache[8]) {\n      _cache = _create(pair)\n      _regex = pair === DEFAULT ? _loopback : _rewrite\n      _cache[9] = _regex(_pairs[9])\n    }\n    cachedBrackets = pair\n  }\n\n  function _setSettings (o) {\n    var b\n\n    o = o || {}\n    b = o.brackets\n    Object.defineProperty(o, 'brackets', {\n      set: _reset,\n      get: function () { return cachedBrackets },\n      enumerable: true\n    })\n    _settings = o\n    _reset(b)\n  }\n\n  Object.defineProperty(_brackets, 'settings', {\n    set: _setSettings,\n    get: function () { return _settings }\n  })\n\n  /* istanbul ignore next: in the browser riot is always in the scope */\n  _brackets.settings = typeof riot !== 'undefined' && riot.settings || {}\n  _brackets.set = _reset\n\n  _brackets.R_STRINGS = R_STRINGS\n  _brackets.R_MLCOMMS = R_MLCOMMS\n  _brackets.S_QBLOCKS = S_QBLOCKS\n\n  return _brackets\n\n})()\n\n/**\n * @module tmpl\n *\n * tmpl          - Root function, returns the template value, render with data\n * tmpl.hasExpr  - Test the existence of a expression inside a string\n * tmpl.loopKeys - Get the keys for an 'each' loop (used by `_each`)\n */\n\nvar tmpl = (function () {\n\n  var _cache = {}\n\n  function _tmpl (str, data) {\n    if (!str) return str\n\n    return (_cache[str] || (_cache[str] = _create(str))).call(data, _logErr)\n  }\n\n  _tmpl.haveRaw = brackets.hasRaw\n\n  _tmpl.hasExpr = brackets.hasExpr\n\n  _tmpl.loopKeys = brackets.loopKeys\n\n  // istanbul ignore next\n  _tmpl.clearCache = function () { _cache = {} }\n\n  _tmpl.errorHandler = null\n\n  function _logErr (err, ctx) {\n\n    if (_tmpl.errorHandler) {\n\n      err.riotData = {\n        tagName: ctx && ctx.root && ctx.root.tagName,\n        _riot_id: ctx && ctx._riot_id  //eslint-disable-line camelcase\n      }\n      _tmpl.errorHandler(err)\n    }\n  }\n\n  function _create (str) {\n    var expr = _getTmpl(str)\n\n    if (expr.slice(0, 11) !== 'try{return ') expr = 'return ' + expr\n\n    return new Function('E', expr + ';')    // eslint-disable-line no-new-func\n  }\n\n  var\n    CH_IDEXPR = String.fromCharCode(0x2057),\n    RE_CSNAME = /^(?:(-?[_A-Za-z\\xA0-\\xFF][-\\w\\xA0-\\xFF]*)|\\u2057(\\d+)~):/,\n    RE_QBLOCK = RegExp(brackets.S_QBLOCKS, 'g'),\n    RE_DQUOTE = /\\u2057/g,\n    RE_QBMARK = /\\u2057(\\d+)~/g\n\n  function _getTmpl (str) {\n    var\n      qstr = [],\n      expr,\n      parts = brackets.split(str.replace(RE_DQUOTE, '\"'), 1)\n\n    if (parts.length > 2 || parts[0]) {\n      var i, j, list = []\n\n      for (i = j = 0; i < parts.length; ++i) {\n\n        expr = parts[i]\n\n        if (expr && (expr = i & 1\n\n            ? _parseExpr(expr, 1, qstr)\n\n            : '\"' + expr\n                .replace(/\\\\/g, '\\\\\\\\')\n                .replace(/\\r\\n?|\\n/g, '\\\\n')\n                .replace(/\"/g, '\\\\\"') +\n              '\"'\n\n          )) list[j++] = expr\n\n      }\n\n      expr = j < 2 ? list[0]\n           : '[' + list.join(',') + '].join(\"\")'\n\n    } else {\n\n      expr = _parseExpr(parts[1], 0, qstr)\n    }\n\n    if (qstr[0]) {\n      expr = expr.replace(RE_QBMARK, function (_, pos) {\n        return qstr[pos]\n          .replace(/\\r/g, '\\\\r')\n          .replace(/\\n/g, '\\\\n')\n      })\n    }\n    return expr\n  }\n\n  var\n    RE_BREND = {\n      '(': /[()]/g,\n      '[': /[[\\]]/g,\n      '{': /[{}]/g\n    }\n\n  function _parseExpr (expr, asText, qstr) {\n\n    expr = expr\n          .replace(RE_QBLOCK, function (s, div) {\n            return s.length > 2 && !div ? CH_IDEXPR + (qstr.push(s) - 1) + '~' : s\n          })\n          .replace(/\\s+/g, ' ').trim()\n          .replace(/\\ ?([[\\({},?\\.:])\\ ?/g, '$1')\n\n    if (expr) {\n      var\n        list = [],\n        cnt = 0,\n        match\n\n      while (expr &&\n            (match = expr.match(RE_CSNAME)) &&\n            !match.index\n        ) {\n        var\n          key,\n          jsb,\n          re = /,|([[{(])|$/g\n\n        expr = RegExp.rightContext\n        key  = match[2] ? qstr[match[2]].slice(1, -1).trim().replace(/\\s+/g, ' ') : match[1]\n\n        while (jsb = (match = re.exec(expr))[1]) skipBraces(jsb, re)\n\n        jsb  = expr.slice(0, match.index)\n        expr = RegExp.rightContext\n\n        list[cnt++] = _wrapExpr(jsb, 1, key)\n      }\n\n      expr = !cnt ? _wrapExpr(expr, asText)\n           : cnt > 1 ? '[' + list.join(',') + '].join(\" \").trim()' : list[0]\n    }\n    return expr\n\n    function skipBraces (ch, re) {\n      var\n        mm,\n        lv = 1,\n        ir = RE_BREND[ch]\n\n      ir.lastIndex = re.lastIndex\n      while (mm = ir.exec(expr)) {\n        if (mm[0] === ch) ++lv\n        else if (!--lv) break\n      }\n      re.lastIndex = lv ? expr.length : ir.lastIndex\n    }\n  }\n\n  // istanbul ignore next: not both\n  var // eslint-disable-next-line max-len\n    JS_CONTEXT = '\"in this?this:' + (typeof window !== 'object' ? 'global' : 'window') + ').',\n    JS_VARNAME = /[,{][\\$\\w]+(?=:)|(^ *|[^$\\w\\.{])(?!(?:typeof|true|false|null|undefined|in|instanceof|is(?:Finite|NaN)|void|NaN|new|Date|RegExp|Math)(?![$\\w]))([$_A-Za-z][$\\w]*)/g,\n    JS_NOPROPS = /^(?=(\\.[$\\w]+))\\1(?:[^.[(]|$)/\n\n  function _wrapExpr (expr, asText, key) {\n    var tb\n\n    expr = expr.replace(JS_VARNAME, function (match, p, mvar, pos, s) {\n      if (mvar) {\n        pos = tb ? 0 : pos + match.length\n\n        if (mvar !== 'this' && mvar !== 'global' && mvar !== 'window') {\n          match = p + '(\"' + mvar + JS_CONTEXT + mvar\n          if (pos) tb = (s = s[pos]) === '.' || s === '(' || s === '['\n        } else if (pos) {\n          tb = !JS_NOPROPS.test(s.slice(pos))\n        }\n      }\n      return match\n    })\n\n    if (tb) {\n      expr = 'try{return ' + expr + '}catch(e){E(e,this)}'\n    }\n\n    if (key) {\n\n      expr = (tb\n          ? 'function(){' + expr + '}.call(this)' : '(' + expr + ')'\n        ) + '?\"' + key + '\":\"\"'\n\n    } else if (asText) {\n\n      expr = 'function(v){' + (tb\n          ? expr.replace('return ', 'v=') : 'v=(' + expr + ')'\n        ) + ';return v||v===0?v:\"\"}.call(this)'\n    }\n\n    return expr\n  }\n\n  _tmpl.version = brackets.version = 'v2.4.2'\n\n  return _tmpl\n\n})()\n\n/*\n  lib/browser/tag/mkdom.js\n\n  Includes hacks needed for the Internet Explorer version 9 and below\n  See: http://kangax.github.io/compat-table/es5/#ie8\n       http://codeplanet.io/dropping-ie8/\n*/\nvar mkdom = (function _mkdom() {\n  var\n    reHasYield  = /<yield\\b/i,\n    reYieldAll  = /<yield\\s*(?:\\/>|>([\\S\\s]*?)<\\/yield\\s*>|>)/ig,\n    reYieldSrc  = /<yield\\s+to=['\"]([^'\">]*)['\"]\\s*>([\\S\\s]*?)<\\/yield\\s*>/ig,\n    reYieldDest = /<yield\\s+from=['\"]?([-\\w]+)['\"]?\\s*(?:\\/>|>([\\S\\s]*?)<\\/yield\\s*>)/ig\n  var\n    rootEls = { tr: 'tbody', th: 'tr', td: 'tr', col: 'colgroup' },\n    tblTags = IE_VERSION && IE_VERSION < 10\n      ? SPECIAL_TAGS_REGEX : /^(?:t(?:body|head|foot|[rhd])|caption|col(?:group)?)$/\n\n  /**\n   * Creates a DOM element to wrap the given content. Normally an `DIV`, but can be\n   * also a `TABLE`, `SELECT`, `TBODY`, `TR`, or `COLGROUP` element.\n   *\n   * @param   { String } templ  - The template coming from the custom tag definition\n   * @param   { String } [html] - HTML content that comes from the DOM element where you\n   *           will mount the tag, mostly the original tag in the page\n   * @param   { Boolean } checkSvg - flag needed to know if we need to force the svg rendering in case of loop nodes\n   * @returns {HTMLElement} DOM element with _templ_ merged through `YIELD` with the _html_.\n   */\n  function _mkdom(templ, html, checkSvg) {\n    var\n      match   = templ && templ.match(/^\\s*<([-\\w]+)/),\n      tagName = match && match[1].toLowerCase(),\n      el = mkEl('div', checkSvg && isSVGTag(tagName))\n\n    // replace all the yield tags with the tag inner html\n    templ = replaceYield(templ, html)\n\n    /* istanbul ignore next */\n    if (tblTags.test(tagName))\n      el = specialTags(el, templ, tagName)\n    else\n      setInnerHTML(el, templ)\n\n    el.stub = true\n\n    return el\n  }\n\n  /*\n    Creates the root element for table or select child elements:\n    tr/th/td/thead/tfoot/tbody/caption/col/colgroup/option/optgroup\n  */\n  function specialTags(el, templ, tagName) {\n    var\n      select = tagName[0] === 'o',\n      parent = select ? 'select>' : 'table>'\n\n    // trim() is important here, this ensures we don't have artifacts,\n    // so we can check if we have only one element inside the parent\n    el.innerHTML = '<' + parent + templ.trim() + '</' + parent\n    parent = el.firstChild\n\n    // returns the immediate parent if tr/th/td/col is the only element, if not\n    // returns the whole tree, as this can include additional elements\n    if (select) {\n      parent.selectedIndex = -1  // for IE9, compatible w/current riot behavior\n    } else {\n      // avoids insertion of cointainer inside container (ex: tbody inside tbody)\n      var tname = rootEls[tagName]\n      if (tname && parent.childElementCount === 1) parent = $(tname, parent)\n    }\n    return parent\n  }\n\n  /*\n    Replace the yield tag from any tag template with the innerHTML of the\n    original tag in the page\n  */\n  function replaceYield(templ, html) {\n    // do nothing if no yield\n    if (!reHasYield.test(templ)) return templ\n\n    // be careful with #1343 - string on the source having `$1`\n    var src = {}\n\n    html = html && html.replace(reYieldSrc, function (_, ref, text) {\n      src[ref] = src[ref] || text   // preserve first definition\n      return ''\n    }).trim()\n\n    return templ\n      .replace(reYieldDest, function (_, ref, def) {  // yield with from - to attrs\n        return src[ref] || def || ''\n      })\n      .replace(reYieldAll, function (_, def) {        // yield without any \"from\"\n        return html || def || ''\n      })\n  }\n\n  return _mkdom\n\n})()\n\n/**\n * Convert the item looped into an object used to extend the child tag properties\n * @param   { Object } expr - object containing the keys used to extend the children tags\n * @param   { * } key - value to assign to the new object returned\n * @param   { * } val - value containing the position of the item in the array\n * @returns { Object } - new object containing the values of the original item\n *\n * The variables 'key' and 'val' are arbitrary.\n * They depend on the collection type looped (Array, Object)\n * and on the expression used on the each tag\n *\n */\nfunction mkitem(expr, key, val) {\n  var item = {}\n  item[expr.key] = key\n  if (expr.pos) item[expr.pos] = val\n  return item\n}\n\n/**\n * Unmount the redundant tags\n * @param   { Array } items - array containing the current items to loop\n * @param   { Array } tags - array containing all the children tags\n */\nfunction unmountRedundant(items, tags) {\n\n  var i = tags.length,\n    j = items.length,\n    t\n\n  while (i > j) {\n    t = tags[--i]\n    tags.splice(i, 1)\n    t.unmount()\n  }\n}\n\n/**\n * Move the nested custom tags in non custom loop tags\n * @param   { Object } child - non custom loop tag\n * @param   { Number } i - current position of the loop tag\n */\nfunction moveNestedTags(child, i) {\n  Object.keys(child.tags).forEach(function(tagName) {\n    var tag = child.tags[tagName]\n    if (isArray(tag))\n      each(tag, function (t) {\n        moveChildTag(t, tagName, i)\n      })\n    else\n      moveChildTag(tag, tagName, i)\n  })\n}\n\n/**\n * Adds the elements for a virtual tag\n * @param { Tag } tag - the tag whose root's children will be inserted or appended\n * @param { Node } src - the node that will do the inserting or appending\n * @param { Tag } target - only if inserting, insert before this tag's first child\n */\nfunction addVirtual(tag, src, target) {\n  var el = tag._root, sib\n  tag._virts = []\n  while (el) {\n    sib = el.nextSibling\n    if (target)\n      src.insertBefore(el, target._root)\n    else\n      src.appendChild(el)\n\n    tag._virts.push(el) // hold for unmounting\n    el = sib\n  }\n}\n\n/**\n * Move virtual tag and all child nodes\n * @param { Tag } tag - first child reference used to start move\n * @param { Node } src  - the node that will do the inserting\n * @param { Tag } target - insert before this tag's first child\n * @param { Number } len - how many child nodes to move\n */\nfunction moveVirtual(tag, src, target, len) {\n  var el = tag._root, sib, i = 0\n  for (; i < len; i++) {\n    sib = el.nextSibling\n    src.insertBefore(el, target._root)\n    el = sib\n  }\n}\n\n/**\n * Insert a new tag avoiding the insert for the conditional tags\n * @param   {Boolean} isVirtual [description]\n * @param   { Tag }  prevTag - tag instance used as reference to prepend our new tag\n * @param   { Tag }  newTag - new tag to be inserted\n * @param   { HTMLElement }  root - loop parent node\n * @param   { Array }  tags - array containing the current tags list\n * @param   { Function }  virtualFn - callback needed to move or insert virtual DOM\n * @param   { Object } dom - DOM node we need to loop\n */\nfunction insertTag(isVirtual, prevTag, newTag, root, tags, virtualFn, dom) {\n  if (isInStub(prevTag.root)) return\n  if (isVirtual) virtualFn(prevTag, root, newTag, dom.childNodes.length)\n  else root.insertBefore(prevTag.root, newTag.root) // #1374 some browsers reset selected here\n}\n\n\n/**\n * Manage tags having the 'each'\n * @param   { Object } dom - DOM node we need to loop\n * @param   { Tag } parent - parent tag instance where the dom node is contained\n * @param   { String } expr - string contained in the 'each' attribute\n */\nfunction _each(dom, parent, expr) {\n\n  // remove the each property from the original tag\n  remAttr(dom, 'each')\n\n  var mustReorder = typeof getAttr(dom, 'no-reorder') !== T_STRING || remAttr(dom, 'no-reorder'),\n    tagName = getTagName(dom),\n    impl = __tagImpl[tagName] || { tmpl: getOuterHTML(dom) },\n    useRoot = SPECIAL_TAGS_REGEX.test(tagName),\n    root = dom.parentNode,\n    ref = document.createTextNode(''),\n    child = getTag(dom),\n    isOption = tagName.toLowerCase() === 'option', // the option tags must be treated differently\n    tags = [],\n    oldItems = [],\n    hasKeys,\n    isVirtual = dom.tagName == 'VIRTUAL'\n\n  // parse the each expression\n  expr = tmpl.loopKeys(expr)\n\n  // insert a marked where the loop tags will be injected\n  root.insertBefore(ref, dom)\n\n  // clean template code\n  parent.one('before-mount', function () {\n\n    // remove the original DOM node\n    dom.parentNode.removeChild(dom)\n    if (root.stub) root = parent.root\n\n  }).on('update', function () {\n    // get the new items collection\n    var items = tmpl(expr.val, parent),\n      // create a fragment to hold the new DOM nodes to inject in the parent tag\n      frag = document.createDocumentFragment()\n\n    // object loop. any changes cause full redraw\n    if (!isArray(items)) {\n      hasKeys = items || false\n      items = hasKeys ?\n        Object.keys(items).map(function (key) {\n          return mkitem(expr, key, items[key])\n        }) : []\n    }\n\n    // loop all the new items\n    var i = 0,\n      itemsLength = items.length\n\n    for (; i < itemsLength; i++) {\n      // reorder only if the items are objects\n      var\n        item = items[i],\n        _mustReorder = mustReorder && typeof item == T_OBJECT && !hasKeys,\n        oldPos = oldItems.indexOf(item),\n        pos = ~oldPos && _mustReorder ? oldPos : i,\n        // does a tag exist in this position?\n        tag = tags[pos]\n\n      item = !hasKeys && expr.key ? mkitem(expr, item, i) : item\n\n      // new tag\n      if (\n        !_mustReorder && !tag // with no-reorder we just update the old tags\n        ||\n        _mustReorder && !~oldPos || !tag // by default we always try to reorder the DOM elements\n      ) {\n\n        tag = new Tag(impl, {\n          parent: parent,\n          isLoop: true,\n          hasImpl: !!__tagImpl[tagName],\n          root: useRoot ? root : dom.cloneNode(),\n          item: item\n        }, dom.innerHTML)\n\n        tag.mount()\n\n        if (isVirtual) tag._root = tag.root.firstChild // save reference for further moves or inserts\n        // this tag must be appended\n        if (i == tags.length || !tags[i]) { // fix 1581\n          if (isVirtual)\n            addVirtual(tag, frag)\n          else frag.appendChild(tag.root)\n        }\n        // this tag must be insert\n        else {\n          insertTag(isVirtual, tag, tags[i], root, tags, addVirtual, dom)\n          oldItems.splice(i, 0, item)\n        }\n\n        tags.splice(i, 0, tag)\n        pos = i // handled here so no move\n      } else tag.update(item, true)\n\n      // reorder the tag if it's not located in its previous position\n      if (\n        pos !== i && _mustReorder &&\n        tags[i] // fix 1581 unable to reproduce it in a test!\n      ) {\n        // #closes 2040 PLEASE DON'T REMOVE IT!\n        // there are no tests for this feature\n        if (contains(items, oldItems[i]))\n          insertTag(isVirtual, tag, tags[i], root, tags, moveVirtual, dom)\n\n        // update the position attribute if it exists\n        if (expr.pos)\n          tag[expr.pos] = i\n        // move the old tag instance\n        tags.splice(i, 0, tags.splice(pos, 1)[0])\n        // move the old item\n        oldItems.splice(i, 0, oldItems.splice(pos, 1)[0])\n        // if the loop tags are not custom\n        // we need to move all their custom tags into the right position\n        if (!child && tag.tags) moveNestedTags(tag, i)\n      }\n\n      // cache the original item to use it in the events bound to this node\n      // and its children\n      tag._item = item\n      // cache the real parent tag internally\n      defineProperty(tag, '_parent', parent)\n    }\n\n    // remove the redundant tags\n    unmountRedundant(items, tags)\n\n    // insert the new nodes\n    root.insertBefore(frag, ref)\n    if (isOption) {\n\n      // #1374 FireFox bug in <option selected={expression}>\n      if (FIREFOX && !root.multiple) {\n        for (var n = 0; n < root.length; n++) {\n          if (root[n].__riot1374) {\n            root.selectedIndex = n  // clear other options\n            delete root[n].__riot1374\n            break\n          }\n        }\n      }\n    }\n\n    // set the 'tags' property of the parent tag\n    // if child is 'undefined' it means that we don't need to set this property\n    // for example:\n    // we don't need store the `myTag.tags['div']` property if we are looping a div tag\n    // but we need to track the `myTag.tags['child']` property looping a custom child node named `child`\n    if (child) parent.tags[tagName] = tags\n\n    // clone the items array\n    oldItems = items.slice()\n\n  })\n\n}\n/**\n * Object that will be used to inject and manage the css of every tag instance\n */\nvar styleManager = (function(_riot) {\n\n  if (!window) return { // skip injection on the server\n    add: function () {},\n    inject: function () {}\n  }\n\n  var styleNode = (function () {\n    // create a new style element with the correct type\n    var newNode = mkEl('style')\n    setAttr(newNode, 'type', 'text/css')\n\n    // replace any user node or insert the new one into the head\n    var userNode = $('style[type=riot]')\n    if (userNode) {\n      if (userNode.id) newNode.id = userNode.id\n      userNode.parentNode.replaceChild(newNode, userNode)\n    }\n    else document.getElementsByTagName('head')[0].appendChild(newNode)\n\n    return newNode\n  })()\n\n  // Create cache and shortcut to the correct property\n  var cssTextProp = styleNode.styleSheet,\n    stylesToInject = ''\n\n  // Expose the style node in a non-modificable property\n  Object.defineProperty(_riot, 'styleNode', {\n    value: styleNode,\n    writable: true\n  })\n\n  /**\n   * Public api\n   */\n  return {\n    /**\n     * Save a tag style to be later injected into DOM\n     * @param   { String } css [description]\n     */\n    add: function(css) {\n      stylesToInject += css\n    },\n    /**\n     * Inject all previously saved tag styles into DOM\n     * innerHTML seems slow: http://jsperf.com/riot-insert-style\n     */\n    inject: function() {\n      if (stylesToInject) {\n        if (cssTextProp) cssTextProp.cssText += stylesToInject\n        else styleNode.innerHTML += stylesToInject\n        stylesToInject = ''\n      }\n    }\n  }\n\n})(riot)\n\n\nfunction parseNamedElements(root, tag, childTags, forceParsingNamed) {\n\n  walk(root, function(dom) {\n    if (dom.nodeType == 1) {\n      dom.isLoop = dom.isLoop ||\n                  (dom.parentNode && dom.parentNode.isLoop || getAttr(dom, 'each'))\n                    ? 1 : 0\n\n      // custom child tag\n      if (childTags) {\n        var child = getTag(dom)\n\n        if (child && !dom.isLoop)\n          childTags.push(initChildTag(child, {root: dom, parent: tag}, dom.innerHTML, tag))\n      }\n\n      if (!dom.isLoop || forceParsingNamed)\n        setNamed(dom, tag, [])\n    }\n\n  })\n\n}\n\nfunction parseExpressions(root, tag, expressions) {\n\n  function addExpr(dom, val, extra) {\n    if (tmpl.hasExpr(val)) {\n      expressions.push(extend({ dom: dom, expr: val }, extra))\n    }\n  }\n\n  walk(root, function(dom) {\n    var type = dom.nodeType,\n      attr\n\n    // text node\n    if (type == 3 && dom.parentNode.tagName != 'STYLE') addExpr(dom, dom.nodeValue)\n    if (type != 1) return\n\n    /* element */\n\n    // loop\n    attr = getAttr(dom, 'each')\n\n    if (attr) { _each(dom, tag, attr); return false }\n\n    // attribute expressions\n    each(dom.attributes, function(attr) {\n      var name = attr.name,\n        bool = name.split('__')[1]\n\n      addExpr(dom, attr.value, { attr: bool || name, bool: bool })\n      if (bool) { remAttr(dom, name); return false }\n\n    })\n\n    // skip custom tags\n    if (getTag(dom)) return false\n\n  })\n\n}\nfunction Tag(impl, conf, innerHTML) {\n\n  var self = riot.observable(this),\n    opts = inherit(conf.opts) || {},\n    parent = conf.parent,\n    isLoop = conf.isLoop,\n    hasImpl = conf.hasImpl,\n    item = cleanUpData(conf.item),\n    expressions = [],\n    childTags = [],\n    root = conf.root,\n    tagName = root.tagName.toLowerCase(),\n    attr = {},\n    propsInSyncWithParent = [],\n    dom\n\n  // only call unmount if we have a valid __tagImpl (has name property)\n  if (impl.name && root._tag) root._tag.unmount(true)\n\n  // not yet mounted\n  this.isMounted = false\n  root.isLoop = isLoop\n\n  // keep a reference to the tag just created\n  // so we will be able to mount this tag multiple times\n  root._tag = this\n\n  // create a unique id to this tag\n  // it could be handy to use it also to improve the virtual dom rendering speed\n  defineProperty(this, '_riot_id', ++__uid) // base 1 allows test !t._riot_id\n\n  extend(this, { parent: parent, root: root, opts: opts}, item)\n  // protect the \"tags\" property from being overridden\n  defineProperty(this, 'tags', {})\n\n  // grab attributes\n  each(root.attributes, function(el) {\n    var val = el.value\n    // remember attributes with expressions only\n    if (tmpl.hasExpr(val)) attr[el.name] = val\n  })\n\n  dom = mkdom(impl.tmpl, innerHTML, isLoop)\n\n  // options\n  function updateOpts() {\n    var ctx = hasImpl && isLoop ? self : parent || self\n\n    // update opts from current DOM attributes\n    each(root.attributes, function(el) {\n      var val = el.value\n      opts[toCamel(el.name)] = tmpl.hasExpr(val) ? tmpl(val, ctx) : val\n    })\n    // recover those with expressions\n    each(Object.keys(attr), function(name) {\n      opts[toCamel(name)] = tmpl(attr[name], ctx)\n    })\n  }\n\n  function normalizeData(data) {\n    for (var key in item) {\n      if (typeof self[key] !== T_UNDEF && isWritable(self, key))\n        self[key] = data[key]\n    }\n  }\n\n  function inheritFrom(target) {\n    each(Object.keys(target), function(k) {\n      // some properties must be always in sync with the parent tag\n      var mustSync = !RESERVED_WORDS_BLACKLIST.test(k) && contains(propsInSyncWithParent, k)\n\n      if (typeof self[k] === T_UNDEF || mustSync) {\n        // track the property to keep in sync\n        // so we can keep it updated\n        if (!mustSync) propsInSyncWithParent.push(k)\n        self[k] = target[k]\n      }\n    })\n  }\n\n  /**\n   * Update the tag expressions and options\n   * @param   { * }  data - data we want to use to extend the tag properties\n   * @param   { Boolean } isInherited - is this update coming from a parent tag?\n   * @returns { self }\n   */\n  defineProperty(this, 'update', function(data, isInherited) {\n\n    // make sure the data passed will not override\n    // the component core methods\n    data = cleanUpData(data)\n    // inherit properties from the parent in loop\n    if (isLoop) {\n      inheritFrom(self.parent)\n    }\n    // normalize the tag properties in case an item object was initially passed\n    if (data && isObject(item)) {\n      normalizeData(data)\n      item = data\n    }\n    extend(self, data)\n    updateOpts()\n    self.trigger('update', data)\n    update(expressions, self)\n\n    // the updated event will be triggered\n    // once the DOM will be ready and all the re-flows are completed\n    // this is useful if you want to get the \"real\" root properties\n    // 4 ex: root.offsetWidth ...\n    if (isInherited && self.parent)\n      // closes #1599\n      self.parent.one('updated', function() { self.trigger('updated') })\n    else rAF(function() { self.trigger('updated') })\n\n    return this\n  })\n\n  defineProperty(this, 'mixin', function() {\n    each(arguments, function(mix) {\n      var instance,\n        props = [],\n        obj\n\n      mix = typeof mix === T_STRING ? riot.mixin(mix) : mix\n\n      // check if the mixin is a function\n      if (isFunction(mix)) {\n        // create the new mixin instance\n        instance = new mix()\n      } else instance = mix\n\n      var proto = Object.getPrototypeOf(instance)\n\n      // build multilevel prototype inheritance chain property list\n      do props = props.concat(Object.getOwnPropertyNames(obj || instance))\n      while (obj = Object.getPrototypeOf(obj || instance))\n\n      // loop the keys in the function prototype or the all object keys\n      each(props, function(key) {\n        // bind methods to self\n        // allow mixins to override other properties/parent mixins\n        if (key != 'init') {\n          // check for getters/setters\n          var descriptor = Object.getOwnPropertyDescriptor(instance, key) || Object.getOwnPropertyDescriptor(proto, key)\n          var hasGetterSetter = descriptor && (descriptor.get || descriptor.set)\n\n          // apply method only if it does not already exist on the instance\n          if (!self.hasOwnProperty(key) && hasGetterSetter) {\n            Object.defineProperty(self, key, descriptor)\n          } else {\n            self[key] = isFunction(instance[key]) ?\n              instance[key].bind(self) :\n              instance[key]\n          }\n        }\n      })\n\n      // init method will be called automatically\n      if (instance.init) instance.init.bind(self)()\n    })\n    return this\n  })\n\n  defineProperty(this, 'mount', function() {\n\n    updateOpts()\n\n    // add global mixins\n    var globalMixin = riot.mixin(GLOBAL_MIXIN)\n\n    if (globalMixin)\n      for (var i in globalMixin)\n        if (globalMixin.hasOwnProperty(i))\n          self.mixin(globalMixin[i])\n\n    // children in loop should inherit from true parent\n    if (self._parent && self._parent.root.isLoop) {\n      inheritFrom(self._parent)\n    }\n\n    // initialiation\n    if (impl.fn) impl.fn.call(self, opts)\n\n    // parse layout after init. fn may calculate args for nested custom tags\n    parseExpressions(dom, self, expressions)\n\n    // mount the child tags\n    toggle(true)\n\n    // update the root adding custom attributes coming from the compiler\n    // it fixes also #1087\n    if (impl.attrs)\n      walkAttributes(impl.attrs, function (k, v) { setAttr(root, k, v) })\n    if (impl.attrs || hasImpl)\n      parseExpressions(self.root, self, expressions)\n\n    if (!self.parent || isLoop) self.update(item)\n\n    // internal use only, fixes #403\n    self.trigger('before-mount')\n\n    if (isLoop && !hasImpl) {\n      // update the root attribute for the looped elements\n      root = dom.firstChild\n    } else {\n      while (dom.firstChild) root.appendChild(dom.firstChild)\n      if (root.stub) root = parent.root\n    }\n\n    defineProperty(self, 'root', root)\n\n    // parse the named dom nodes in the looped child\n    // adding them to the parent as well\n    if (isLoop)\n      parseNamedElements(self.root, self.parent, null, true)\n\n    // if it's not a child tag we can trigger its mount event\n    if (!self.parent || self.parent.isMounted) {\n      self.isMounted = true\n      self.trigger('mount')\n    }\n    // otherwise we need to wait that the parent event gets triggered\n    else self.parent.one('mount', function() {\n      // avoid to trigger the `mount` event for the tags\n      // not visible included in an if statement\n      if (!isInStub(self.root)) {\n        self.parent.isMounted = self.isMounted = true\n        self.trigger('mount')\n      }\n    })\n  })\n\n\n  defineProperty(this, 'unmount', function(keepRootTag) {\n    var el = root,\n      p = el.parentNode,\n      ptag,\n      tagIndex = __virtualDom.indexOf(self)\n\n    self.trigger('before-unmount')\n\n    // remove this tag instance from the global virtualDom variable\n    if (~tagIndex)\n      __virtualDom.splice(tagIndex, 1)\n\n    if (p) {\n\n      if (parent) {\n        ptag = getImmediateCustomParentTag(parent)\n        // remove this tag from the parent tags object\n        // if there are multiple nested tags with same name..\n        // remove this element form the array\n        if (isArray(ptag.tags[tagName]))\n          each(ptag.tags[tagName], function(tag, i) {\n            if (tag._riot_id == self._riot_id)\n              ptag.tags[tagName].splice(i, 1)\n          })\n        else\n          // otherwise just delete the tag instance\n          ptag.tags[tagName] = undefined\n      }\n\n      else\n        while (el.firstChild) el.removeChild(el.firstChild)\n\n      if (!keepRootTag)\n        p.removeChild(el)\n      else {\n        // the riot-tag and the data-is attributes aren't needed anymore, remove them\n        remAttr(p, RIOT_TAG_IS)\n        remAttr(p, RIOT_TAG) // this will be removed in riot 3.0.0\n      }\n\n    }\n\n    if (this._virts) {\n      each(this._virts, function(v) {\n        if (v.parentNode) v.parentNode.removeChild(v)\n      })\n    }\n\n    self.trigger('unmount')\n    toggle()\n    self.off('*')\n    self.isMounted = false\n    delete root._tag\n\n  })\n\n  // proxy function to bind updates\n  // dispatched from a parent tag\n  function onChildUpdate(data) { self.update(data, true) }\n\n  function toggle(isMount) {\n\n    // mount/unmount children\n    each(childTags, function(child) { child[isMount ? 'mount' : 'unmount']() })\n\n    // listen/unlisten parent (events flow one way from parent to children)\n    if (!parent) return\n    var evt = isMount ? 'on' : 'off'\n\n    // the loop tags will be always in sync with the parent automatically\n    if (isLoop)\n      parent[evt]('unmount', self.unmount)\n    else {\n      parent[evt]('update', onChildUpdate)[evt]('unmount', self.unmount)\n    }\n  }\n\n\n  // named elements available for fn\n  parseNamedElements(dom, this, childTags)\n\n}\n/**\n * Attach an event to a DOM node\n * @param { String } name - event name\n * @param { Function } handler - event callback\n * @param { Object } dom - dom node\n * @param { Tag } tag - tag instance\n */\nfunction setEventHandler(name, handler, dom, tag) {\n\n  dom[name] = function(e) {\n\n    var ptag = tag._parent,\n      item = tag._item,\n      el\n\n    if (!item)\n      while (ptag && !item) {\n        item = ptag._item\n        ptag = ptag._parent\n      }\n\n    // cross browser event fix\n    e = e || window.event\n\n    // override the event properties\n    if (isWritable(e, 'currentTarget')) e.currentTarget = dom\n    if (isWritable(e, 'target')) e.target = e.srcElement\n    if (isWritable(e, 'which')) e.which = e.charCode || e.keyCode\n\n    e.item = item\n\n    // prevent default behaviour (by default)\n    if (handler.call(tag, e) !== true && !/radio|check/.test(dom.type)) {\n      if (e.preventDefault) e.preventDefault()\n      e.returnValue = false\n    }\n\n    if (!e.preventUpdate) {\n      el = item ? getImmediateCustomParentTag(ptag) : tag\n      el.update()\n    }\n\n  }\n\n}\n\n\n/**\n * Insert a DOM node replacing another one (used by if- attribute)\n * @param   { Object } root - parent node\n * @param   { Object } node - node replaced\n * @param   { Object } before - node added\n */\nfunction insertTo(root, node, before) {\n  if (!root) return\n  root.insertBefore(before, node)\n  root.removeChild(node)\n}\n\n/**\n * Update the expressions in a Tag instance\n * @param   { Array } expressions - expression that must be re evaluated\n * @param   { Tag } tag - tag instance\n */\nfunction update(expressions, tag) {\n\n  each(expressions, function(expr, i) {\n\n    var dom = expr.dom,\n      attrName = expr.attr,\n      value = tmpl(expr.expr, tag),\n      parent = expr.parent || expr.dom.parentNode\n\n    if (expr.bool) {\n      value = !!value\n    } else if (value == null) {\n      value = ''\n    }\n\n    // #1638: regression of #1612, update the dom only if the value of the\n    // expression was changed\n    if (expr.value === value) {\n      return\n    }\n    expr.value = value\n\n    // textarea and text nodes has no attribute name\n    if (!attrName) {\n      // about #815 w/o replace: the browser converts the value to a string,\n      // the comparison by \"==\" does too, but not in the server\n      value += ''\n      // test for parent avoids error with invalid assignment to nodeValue\n      if (parent) {\n        // cache the parent node because somehow it will become null on IE\n        // on the next iteration\n        expr.parent = parent\n        if (parent.tagName === 'TEXTAREA') {\n          parent.value = value                    // #1113\n          if (!IE_VERSION) dom.nodeValue = value  // #1625 IE throws here, nodeValue\n        }                                         // will be available on 'updated'\n        else dom.nodeValue = value\n      }\n      return\n    }\n\n    // ~~#1612: look for changes in dom.value when updating the value~~\n    if (attrName === 'value') {\n      if (dom.value !== value) {\n        dom.value = value\n        setAttr(dom, attrName, value)\n      }\n      return\n    } else {\n      // remove original attribute\n      remAttr(dom, attrName)\n    }\n\n    // event handler\n    if (isFunction(value)) {\n      setEventHandler(attrName, value, dom, tag)\n\n    // if- conditional\n    } else if (attrName == 'if') {\n      var stub = expr.stub,\n        add = function() { insertTo(stub.parentNode, stub, dom) },\n        remove = function() { insertTo(dom.parentNode, dom, stub) }\n\n      // add to DOM\n      if (value) {\n        if (stub) {\n          add()\n          dom.inStub = false\n          // avoid to trigger the mount event if the tags is not visible yet\n          // maybe we can optimize this avoiding to mount the tag at all\n          if (!isInStub(dom)) {\n            walk(dom, function(el) {\n              if (el._tag && !el._tag.isMounted)\n                el._tag.isMounted = !!el._tag.trigger('mount')\n            })\n          }\n        }\n      // remove from DOM\n      } else {\n        stub = expr.stub = stub || document.createTextNode('')\n        // if the parentNode is defined we can easily replace the tag\n        if (dom.parentNode)\n          remove()\n        // otherwise we need to wait the updated event\n        else (tag.parent || tag).one('updated', remove)\n\n        dom.inStub = true\n      }\n    // show / hide\n    } else if (attrName === 'show') {\n      dom.style.display = value ? '' : 'none'\n\n    } else if (attrName === 'hide') {\n      dom.style.display = value ? 'none' : ''\n\n    } else if (expr.bool) {\n      dom[attrName] = value\n      if (value) setAttr(dom, attrName, attrName)\n      if (FIREFOX && attrName === 'selected' && dom.tagName === 'OPTION') {\n        dom.__riot1374 = value   // #1374\n      }\n\n    } else if (value === 0 || value && typeof value !== T_OBJECT) {\n      // <img src=\"{ expr }\">\n      if (startsWith(attrName, RIOT_PREFIX) && attrName != RIOT_TAG) {\n        attrName = attrName.slice(RIOT_PREFIX.length)\n      }\n      setAttr(dom, attrName, value)\n    }\n\n  })\n\n}\n/**\n * Specialized function for looping an array-like collection with `each={}`\n * @param   { Array } els - collection of items\n * @param   {Function} fn - callback function\n * @returns { Array } the array looped\n */\nfunction each(els, fn) {\n  var len = els ? els.length : 0\n\n  for (var i = 0, el; i < len; i++) {\n    el = els[i]\n    // return false -> current item was removed by fn during the loop\n    if (el != null && fn(el, i) === false) i--\n  }\n  return els\n}\n\n/**\n * Detect if the argument passed is a function\n * @param   { * } v - whatever you want to pass to this function\n * @returns { Boolean } -\n */\nfunction isFunction(v) {\n  return typeof v === T_FUNCTION || false   // avoid IE problems\n}\n\n/**\n * Get the outer html of any DOM node SVGs included\n * @param   { Object } el - DOM node to parse\n * @returns { String } el.outerHTML\n */\nfunction getOuterHTML(el) {\n  if (el.outerHTML) return el.outerHTML\n  // some browsers do not support outerHTML on the SVGs tags\n  else {\n    var container = mkEl('div')\n    container.appendChild(el.cloneNode(true))\n    return container.innerHTML\n  }\n}\n\n/**\n * Set the inner html of any DOM node SVGs included\n * @param { Object } container - DOM node where we will inject the new html\n * @param { String } html - html to inject\n */\nfunction setInnerHTML(container, html) {\n  if (typeof container.innerHTML != T_UNDEF) container.innerHTML = html\n  // some browsers do not support innerHTML on the SVGs tags\n  else {\n    var doc = new DOMParser().parseFromString(html, 'application/xml')\n    container.appendChild(\n      container.ownerDocument.importNode(doc.documentElement, true)\n    )\n  }\n}\n\n/**\n * Checks wether a DOM node must be considered part of an svg document\n * @param   { String }  name - tag name\n * @returns { Boolean } -\n */\nfunction isSVGTag(name) {\n  return ~SVG_TAGS_LIST.indexOf(name)\n}\n\n/**\n * Detect if the argument passed is an object, exclude null.\n * NOTE: Use isObject(x) && !isArray(x) to excludes arrays.\n * @param   { * } v - whatever you want to pass to this function\n * @returns { Boolean } -\n */\nfunction isObject(v) {\n  return v && typeof v === T_OBJECT         // typeof null is 'object'\n}\n\n/**\n * Remove any DOM attribute from a node\n * @param   { Object } dom - DOM node we want to update\n * @param   { String } name - name of the property we want to remove\n */\nfunction remAttr(dom, name) {\n  dom.removeAttribute(name)\n}\n\n/**\n * Convert a string containing dashes to camel case\n * @param   { String } string - input string\n * @returns { String } my-string -> myString\n */\nfunction toCamel(string) {\n  return string.replace(/-(\\w)/g, function(_, c) {\n    return c.toUpperCase()\n  })\n}\n\n/**\n * Get the value of any DOM attribute on a node\n * @param   { Object } dom - DOM node we want to parse\n * @param   { String } name - name of the attribute we want to get\n * @returns { String | undefined } name of the node attribute whether it exists\n */\nfunction getAttr(dom, name) {\n  return dom.getAttribute(name)\n}\n\n/**\n * Set any DOM/SVG attribute\n * @param { Object } dom - DOM node we want to update\n * @param { String } name - name of the property we want to set\n * @param { String } val - value of the property we want to set\n */\nfunction setAttr(dom, name, val) {\n  var xlink = XLINK_REGEX.exec(name)\n  if (xlink && xlink[1])\n    dom.setAttributeNS(XLINK_NS, xlink[1], val)\n  else\n    dom.setAttribute(name, val)\n}\n\n/**\n * Detect the tag implementation by a DOM node\n * @param   { Object } dom - DOM node we need to parse to get its tag implementation\n * @returns { Object } it returns an object containing the implementation of a custom tag (template and boot function)\n */\nfunction getTag(dom) {\n  return dom.tagName && __tagImpl[getAttr(dom, RIOT_TAG_IS) ||\n    getAttr(dom, RIOT_TAG) || dom.tagName.toLowerCase()]\n}\n/**\n * Add a child tag to its parent into the `tags` object\n * @param   { Object } tag - child tag instance\n * @param   { String } tagName - key where the new tag will be stored\n * @param   { Object } parent - tag instance where the new child tag will be included\n */\nfunction addChildTag(tag, tagName, parent) {\n  var cachedTag = parent.tags[tagName]\n\n  // if there are multiple children tags having the same name\n  if (cachedTag) {\n    // if the parent tags property is not yet an array\n    // create it adding the first cached tag\n    if (!isArray(cachedTag))\n      // don't add the same tag twice\n      if (cachedTag !== tag)\n        parent.tags[tagName] = [cachedTag]\n    // add the new nested tag to the array\n    if (!contains(parent.tags[tagName], tag))\n      parent.tags[tagName].push(tag)\n  } else {\n    parent.tags[tagName] = tag\n  }\n}\n\n/**\n * Move the position of a custom tag in its parent tag\n * @param   { Object } tag - child tag instance\n * @param   { String } tagName - key where the tag was stored\n * @param   { Number } newPos - index where the new tag will be stored\n */\nfunction moveChildTag(tag, tagName, newPos) {\n  var parent = tag.parent,\n    tags\n  // no parent no move\n  if (!parent) return\n\n  tags = parent.tags[tagName]\n\n  if (isArray(tags))\n    tags.splice(newPos, 0, tags.splice(tags.indexOf(tag), 1)[0])\n  else addChildTag(tag, tagName, parent)\n}\n\n/**\n * Create a new child tag including it correctly into its parent\n * @param   { Object } child - child tag implementation\n * @param   { Object } opts - tag options containing the DOM node where the tag will be mounted\n * @param   { String } innerHTML - inner html of the child node\n * @param   { Object } parent - instance of the parent tag including the child custom tag\n * @returns { Object } instance of the new child tag just created\n */\nfunction initChildTag(child, opts, innerHTML, parent) {\n  var tag = new Tag(child, opts, innerHTML),\n    tagName = getTagName(opts.root),\n    ptag = getImmediateCustomParentTag(parent)\n  // fix for the parent attribute in the looped elements\n  tag.parent = ptag\n  // store the real parent tag\n  // in some cases this could be different from the custom parent tag\n  // for example in nested loops\n  tag._parent = parent\n\n  // add this tag to the custom parent tag\n  addChildTag(tag, tagName, ptag)\n  // and also to the real parent tag\n  if (ptag !== parent)\n    addChildTag(tag, tagName, parent)\n  // empty the child node once we got its template\n  // to avoid that its children get compiled multiple times\n  opts.root.innerHTML = ''\n\n  return tag\n}\n\n/**\n * Loop backward all the parents tree to detect the first custom parent tag\n * @param   { Object } tag - a Tag instance\n * @returns { Object } the instance of the first custom parent tag found\n */\nfunction getImmediateCustomParentTag(tag) {\n  var ptag = tag\n  while (!getTag(ptag.root)) {\n    if (!ptag.parent) break\n    ptag = ptag.parent\n  }\n  return ptag\n}\n\n/**\n * Helper function to set an immutable property\n * @param   { Object } el - object where the new property will be set\n * @param   { String } key - object key where the new property will be stored\n * @param   { * } value - value of the new property\n* @param   { Object } options - set the propery overriding the default options\n * @returns { Object } - the initial object\n */\nfunction defineProperty(el, key, value, options) {\n  Object.defineProperty(el, key, extend({\n    value: value,\n    enumerable: false,\n    writable: false,\n    configurable: true\n  }, options))\n  return el\n}\n\n/**\n * Get the tag name of any DOM node\n * @param   { Object } dom - DOM node we want to parse\n * @returns { String } name to identify this dom node in riot\n */\nfunction getTagName(dom) {\n  var child = getTag(dom),\n    namedTag = getAttr(dom, 'name'),\n    tagName = namedTag && !tmpl.hasExpr(namedTag) ?\n                namedTag :\n              child ? child.name : dom.tagName.toLowerCase()\n\n  return tagName\n}\n\n/**\n * Extend any object with other properties\n * @param   { Object } src - source object\n * @returns { Object } the resulting extended object\n *\n * var obj = { foo: 'baz' }\n * extend(obj, {bar: 'bar', foo: 'bar'})\n * console.log(obj) => {bar: 'bar', foo: 'bar'}\n *\n */\nfunction extend(src) {\n  var obj, args = arguments\n  for (var i = 1; i < args.length; ++i) {\n    if (obj = args[i]) {\n      for (var key in obj) {\n        // check if this property of the source object could be overridden\n        if (isWritable(src, key))\n          src[key] = obj[key]\n      }\n    }\n  }\n  return src\n}\n\n/**\n * Check whether an array contains an item\n * @param   { Array } arr - target array\n * @param   { * } item - item to test\n * @returns { Boolean } Does 'arr' contain 'item'?\n */\nfunction contains(arr, item) {\n  return ~arr.indexOf(item)\n}\n\n/**\n * Check whether an object is a kind of array\n * @param   { * } a - anything\n * @returns {Boolean} is 'a' an array?\n */\nfunction isArray(a) { return Array.isArray(a) || a instanceof Array }\n\n/**\n * Detect whether a property of an object could be overridden\n * @param   { Object }  obj - source object\n * @param   { String }  key - object property\n * @returns { Boolean } is this property writable?\n */\nfunction isWritable(obj, key) {\n  var props = Object.getOwnPropertyDescriptor(obj, key)\n  return typeof obj[key] === T_UNDEF || props && props.writable\n}\n\n\n/**\n * With this function we avoid that the internal Tag methods get overridden\n * @param   { Object } data - options we want to use to extend the tag instance\n * @returns { Object } clean object without containing the riot internal reserved words\n */\nfunction cleanUpData(data) {\n  if (!(data instanceof Tag) && !(data && typeof data.trigger == T_FUNCTION))\n    return data\n\n  var o = {}\n  for (var key in data) {\n    if (!RESERVED_WORDS_BLACKLIST.test(key)) o[key] = data[key]\n  }\n  return o\n}\n\n/**\n * Walk down recursively all the children tags starting dom node\n * @param   { Object }   dom - starting node where we will start the recursion\n * @param   { Function } fn - callback to transform the child node just found\n */\nfunction walk(dom, fn) {\n  if (dom) {\n    // stop the recursion\n    if (fn(dom) === false) return\n    else {\n      dom = dom.firstChild\n\n      while (dom) {\n        walk(dom, fn)\n        dom = dom.nextSibling\n      }\n    }\n  }\n}\n\n/**\n * Minimize risk: only zero or one _space_ between attr & value\n * @param   { String }   html - html string we want to parse\n * @param   { Function } fn - callback function to apply on any attribute found\n */\nfunction walkAttributes(html, fn) {\n  var m,\n    re = /([-\\w]+) ?= ?(?:\"([^\"]*)|'([^']*)|({[^}]*}))/g\n\n  while (m = re.exec(html)) {\n    fn(m[1].toLowerCase(), m[2] || m[3] || m[4])\n  }\n}\n\n/**\n * Check whether a DOM node is in stub mode, useful for the riot 'if' directive\n * @param   { Object }  dom - DOM node we want to parse\n * @returns { Boolean } -\n */\nfunction isInStub(dom) {\n  while (dom) {\n    if (dom.inStub) return true\n    dom = dom.parentNode\n  }\n  return false\n}\n\n/**\n * Create a generic DOM node\n * @param   { String } name - name of the DOM node we want to create\n * @param   { Boolean } isSvg - should we use a SVG as parent node?\n * @returns { Object } DOM node just created\n */\nfunction mkEl(name, isSvg) {\n  return isSvg ?\n    document.createElementNS('http://www.w3.org/2000/svg', 'svg') :\n    document.createElement(name)\n}\n\n/**\n * Shorter and fast way to select multiple nodes in the DOM\n * @param   { String } selector - DOM selector\n * @param   { Object } ctx - DOM node where the targets of our search will is located\n * @returns { Object } dom nodes found\n */\nfunction $$(selector, ctx) {\n  return (ctx || document).querySelectorAll(selector)\n}\n\n/**\n * Shorter and fast way to select a single node in the DOM\n * @param   { String } selector - unique dom selector\n * @param   { Object } ctx - DOM node where the target of our search will is located\n * @returns { Object } dom node found\n */\nfunction $(selector, ctx) {\n  return (ctx || document).querySelector(selector)\n}\n\n/**\n * Simple object prototypal inheritance\n * @param   { Object } parent - parent object\n * @returns { Object } child instance\n */\nfunction inherit(parent) {\n  return Object.create(parent || null)\n}\n\n/**\n * Get the name property needed to identify a DOM node in riot\n * @param   { Object } dom - DOM node we need to parse\n * @returns { String | undefined } give us back a string to identify this dom node\n */\nfunction getNamedKey(dom) {\n  return getAttr(dom, 'id') || getAttr(dom, 'name')\n}\n\n/**\n * Set the named properties of a tag element\n * @param { Object } dom - DOM node we need to parse\n * @param { Object } parent - tag instance where the named dom element will be eventually added\n * @param { Array } keys - list of all the tag instance properties\n */\nfunction setNamed(dom, parent, keys) {\n  // get the key value we want to add to the tag instance\n  var key = getNamedKey(dom),\n    isArr,\n    // add the node detected to a tag instance using the named property\n    add = function(value) {\n      // avoid to override the tag properties already set\n      if (contains(keys, key)) return\n      // check whether this value is an array\n      isArr = isArray(value)\n      // if the key was never set\n      if (!value)\n        // set it once on the tag instance\n        parent[key] = dom\n      // if it was an array and not yet set\n      else if (!isArr || isArr && !contains(value, dom)) {\n        // add the dom node into the array\n        if (isArr)\n          value.push(dom)\n        else\n          parent[key] = [value, dom]\n      }\n    }\n\n  // skip the elements with no named properties\n  if (!key) return\n\n  // check whether this key has been already evaluated\n  if (tmpl.hasExpr(key))\n    // wait the first updated event only once\n    parent.one('mount', function() {\n      key = getNamedKey(dom)\n      add(parent[key])\n    })\n  else\n    add(parent[key])\n\n}\n\n/**\n * Faster String startsWith alternative\n * @param   { String } src - source string\n * @param   { String } str - test string\n * @returns { Boolean } -\n */\nfunction startsWith(src, str) {\n  return src.slice(0, str.length) === str\n}\n\n/**\n * requestAnimationFrame function\n * Adapted from https://gist.github.com/paulirish/1579671, license MIT\n */\nvar rAF = (function (w) {\n  var raf = w.requestAnimationFrame    ||\n            w.mozRequestAnimationFrame || w.webkitRequestAnimationFrame\n\n  if (!raf || /iP(ad|hone|od).*OS 6/.test(w.navigator.userAgent)) {  // buggy iOS6\n    var lastTime = 0\n\n    raf = function (cb) {\n      var nowtime = Date.now(), timeout = Math.max(16 - (nowtime - lastTime), 0)\n      setTimeout(function () { cb(lastTime = nowtime + timeout) }, timeout)\n    }\n  }\n  return raf\n\n})(window || {})\n\n/**\n * Mount a tag creating new Tag instance\n * @param   { Object } root - dom node where the tag will be mounted\n * @param   { String } tagName - name of the riot tag we want to mount\n * @param   { Object } opts - options to pass to the Tag instance\n * @returns { Tag } a new Tag instance\n */\nfunction mountTo(root, tagName, opts) {\n  var tag = __tagImpl[tagName],\n    // cache the inner HTML to fix #855\n    innerHTML = root._innerHTML = root._innerHTML || root.innerHTML\n\n  // clear the inner html\n  root.innerHTML = ''\n\n  if (tag && root) tag = new Tag(tag, { root: root, opts: opts }, innerHTML)\n\n  if (tag && tag.mount) {\n    tag.mount()\n    // add this tag to the virtualDom variable\n    if (!contains(__virtualDom, tag)) __virtualDom.push(tag)\n  }\n\n  return tag\n}\n/**\n * Riot public api\n */\n\n// share methods for other riot parts, e.g. compiler\nriot.util = { brackets: brackets, tmpl: tmpl }\n\n/**\n * Create a mixin that could be globally shared across all the tags\n */\nriot.mixin = (function() {\n  var mixins = {},\n    globals = mixins[GLOBAL_MIXIN] = {},\n    _id = 0\n\n  /**\n   * Create/Return a mixin by its name\n   * @param   { String }  name - mixin name (global mixin if object)\n   * @param   { Object }  mixin - mixin logic\n   * @param   { Boolean } g - is global?\n   * @returns { Object }  the mixin logic\n   */\n  return function(name, mixin, g) {\n    // Unnamed global\n    if (isObject(name)) {\n      riot.mixin('__unnamed_'+_id++, name, true)\n      return\n    }\n\n    var store = g ? globals : mixins\n\n    // Getter\n    if (!mixin) {\n      if (typeof store[name] === T_UNDEF) {\n        throw new Error('Unregistered mixin: ' + name)\n      }\n      return store[name]\n    }\n    // Setter\n    if (isFunction(mixin)) {\n      extend(mixin.prototype, store[name] || {})\n      store[name] = mixin\n    }\n    else {\n      store[name] = extend(store[name] || {}, mixin)\n    }\n  }\n\n})()\n\n/**\n * Create a new riot tag implementation\n * @param   { String }   name - name/id of the new riot tag\n * @param   { String }   html - tag template\n * @param   { String }   css - custom tag css\n * @param   { String }   attrs - root tag attributes\n * @param   { Function } fn - user function\n * @returns { String } name/id of the tag just created\n */\nriot.tag = function(name, html, css, attrs, fn) {\n  if (isFunction(attrs)) {\n    fn = attrs\n    if (/^[\\w\\-]+\\s?=/.test(css)) {\n      attrs = css\n      css = ''\n    } else attrs = ''\n  }\n  if (css) {\n    if (isFunction(css)) fn = css\n    else styleManager.add(css)\n  }\n  name = name.toLowerCase()\n  __tagImpl[name] = { name: name, tmpl: html, attrs: attrs, fn: fn }\n  return name\n}\n\n/**\n * Create a new riot tag implementation (for use by the compiler)\n * @param   { String }   name - name/id of the new riot tag\n * @param   { String }   html - tag template\n * @param   { String }   css - custom tag css\n * @param   { String }   attrs - root tag attributes\n * @param   { Function } fn - user function\n * @returns { String } name/id of the tag just created\n */\nriot.tag2 = function(name, html, css, attrs, fn) {\n  if (css) styleManager.add(css)\n  //if (bpair) riot.settings.brackets = bpair\n  __tagImpl[name] = { name: name, tmpl: html, attrs: attrs, fn: fn }\n  return name\n}\n\n/**\n * Mount a tag using a specific tag implementation\n * @param   { String } selector - tag DOM selector\n * @param   { String } tagName - tag implementation name\n * @param   { Object } opts - tag logic\n * @returns { Array } new tags instances\n */\nriot.mount = function(selector, tagName, opts) {\n\n  var els,\n    allTags,\n    tags = []\n\n  // helper functions\n\n  function addRiotTags(arr) {\n    var list = ''\n    each(arr, function (e) {\n      if (!/[^-\\w]/.test(e)) {\n        e = e.trim().toLowerCase()\n        list += ',[' + RIOT_TAG_IS + '=\"' + e + '\"],[' + RIOT_TAG + '=\"' + e + '\"]'\n      }\n    })\n    return list\n  }\n\n  function selectAllTags() {\n    var keys = Object.keys(__tagImpl)\n    return keys + addRiotTags(keys)\n  }\n\n  function pushTags(root) {\n    if (root.tagName) {\n      var riotTag = getAttr(root, RIOT_TAG_IS) || getAttr(root, RIOT_TAG)\n\n      // have tagName? force riot-tag to be the same\n      if (tagName && riotTag !== tagName) {\n        riotTag = tagName\n        setAttr(root, RIOT_TAG_IS, tagName)\n        setAttr(root, RIOT_TAG, tagName) // this will be removed in riot 3.0.0\n      }\n      var tag = mountTo(root, riotTag || root.tagName.toLowerCase(), opts)\n\n      if (tag) tags.push(tag)\n    } else if (root.length) {\n      each(root, pushTags)   // assume nodeList\n    }\n  }\n\n  // ----- mount code -----\n\n  // inject styles into DOM\n  styleManager.inject()\n\n  if (isObject(tagName)) {\n    opts = tagName\n    tagName = 0\n  }\n\n  // crawl the DOM to find the tag\n  if (typeof selector === T_STRING) {\n    if (selector === '*')\n      // select all the tags registered\n      // and also the tags found with the riot-tag attribute set\n      selector = allTags = selectAllTags()\n    else\n      // or just the ones named like the selector\n      selector += addRiotTags(selector.split(/, */))\n\n    // make sure to pass always a selector\n    // to the querySelectorAll function\n    els = selector ? $$(selector) : []\n  }\n  else\n    // probably you have passed already a tag or a NodeList\n    els = selector\n\n  // select all the registered and mount them inside their root elements\n  if (tagName === '*') {\n    // get all custom tags\n    tagName = allTags || selectAllTags()\n    // if the root els it's just a single tag\n    if (els.tagName)\n      els = $$(tagName, els)\n    else {\n      // select all the children for all the different root elements\n      var nodeList = []\n      each(els, function (_el) {\n        nodeList.push($$(tagName, _el))\n      })\n      els = nodeList\n    }\n    // get rid of the tagName\n    tagName = 0\n  }\n\n  pushTags(els)\n\n  return tags\n}\n\n/**\n * Update all the tags instances created\n * @returns { Array } all the tags instances\n */\nriot.update = function() {\n  return each(__virtualDom, function(tag) {\n    tag.update()\n  })\n}\n\n/**\n * Export the Virtual DOM\n */\nriot.vdom = __virtualDom\n\n/**\n * Export the Tag constructor\n */\nriot.Tag = Tag\n  // support CommonJS, AMD & browser\n  /* istanbul ignore next */\n  if (typeof exports === T_OBJECT)\n    module.exports = riot\n  else if (\"function\" === T_FUNCTION && typeof __webpack_require__(37) !== T_UNDEF)\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() { return riot }.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n  else\n    window.riot = riot\n\n})(typeof window != 'undefined' ? window : void 0);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nmodule.exports = {\n  IN: 'IN',\n  OUT: 'OUT',\n  END: 'END',\n  PREV: 'PREV',\n  NEXT: 'NEXT'\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8vaG9tZS9qb3JnZS9kZXYvZ2FsbC9zcmMvY29uc3RhbnRzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0ge1xuICBJTjogJ0lOJyxcbiAgT1VUOiAnT1VUJyxcbiAgRU5EOiAnRU5EJyxcbiAgUFJFVjogJ1BSRVYnLFxuICBORVhUOiAnTkVYVCdcbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9jb25zdGFudHMuanMiXSwibWFwcGluZ3MiOiI7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Super simple throttle, leading only, not greedy.\n * Based on @jonathansampson post Simple Throttle Function.\n * http://sampsonblog.com/749/simple-throttle-function\n *\n * @param      {Function}  targetFunc  The target function.\n * @param      {Number}    lapse       The time that the target function will be blocked in ms.\n * @return     {Function}              A throttled function.\n */\n\n\nmodule.exports = function throttle(targetFunc, lapse) {\n  // Using the Throttle analogy:\n  var isOpen = true; // Valve's state.\n\n  return function throttled() {\n    // Returns a function that\n    if (isOpen) {\n      // when the valve is 'open' allows one call to the target function\n      isOpen = false; // and 'closes', prevents future calls of being executed,\n      setTimeout(function () {\n        return isOpen = true;\n      }, lapse); // and later after a lapse 'opens' the valve back.\n      return targetFunc.apply(this, arguments); // Returning the result of the target applying the throttled scope and args.\n    }\n  };\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8vaG9tZS9qb3JnZS9kZXYvZ2FsbC9zcmMvbGliL3Rocm90dGxlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogU3VwZXIgc2ltcGxlIHRocm90dGxlLCBsZWFkaW5nIG9ubHksIG5vdCBncmVlZHkuXG4gKiBCYXNlZCBvbiBAam9uYXRoYW5zYW1wc29uIHBvc3QgU2ltcGxlIFRocm90dGxlIEZ1bmN0aW9uLlxuICogaHR0cDovL3NhbXBzb25ibG9nLmNvbS83NDkvc2ltcGxlLXRocm90dGxlLWZ1bmN0aW9uXG4gKlxuICogQHBhcmFtICAgICAge0Z1bmN0aW9ufSAgdGFyZ2V0RnVuYyAgVGhlIHRhcmdldCBmdW5jdGlvbi5cbiAqIEBwYXJhbSAgICAgIHtOdW1iZXJ9ICAgIGxhcHNlICAgICAgIFRoZSB0aW1lIHRoYXQgdGhlIHRhcmdldCBmdW5jdGlvbiB3aWxsIGJlIGJsb2NrZWQgaW4gbXMuXG4gKiBAcmV0dXJuICAgICB7RnVuY3Rpb259ICAgICAgICAgICAgICBBIHRocm90dGxlZCBmdW5jdGlvbi5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiB0aHJvdHRsZSAodGFyZ2V0RnVuYywgbGFwc2UpIHsgICAvLyBVc2luZyB0aGUgVGhyb3R0bGUgYW5hbG9neTpcbiAgbGV0IGlzT3BlbiA9IHRydWUgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gVmFsdmUncyBzdGF0ZS5cblxuICByZXR1cm4gZnVuY3Rpb24gdGhyb3R0bGVkICgpIHsgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBSZXR1cm5zIGEgZnVuY3Rpb24gdGhhdFxuICAgIGlmIChpc09wZW4pIHsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyB3aGVuIHRoZSB2YWx2ZSBpcyAnb3BlbicgYWxsb3dzIG9uZSBjYWxsIHRvIHRoZSB0YXJnZXQgZnVuY3Rpb25cbiAgICAgIGlzT3BlbiA9IGZhbHNlICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gYW5kICdjbG9zZXMnLCBwcmV2ZW50cyBmdXR1cmUgY2FsbHMgb2YgYmVpbmcgZXhlY3V0ZWQsXG4gICAgICBzZXRUaW1lb3V0KCgpID0+IChpc09wZW4gPSB0cnVlKSwgbGFwc2UpICAgICAgICAgICAgIC8vIGFuZCBsYXRlciBhZnRlciBhIGxhcHNlICdvcGVucycgdGhlIHZhbHZlIGJhY2suXG4gICAgICByZXR1cm4gdGFyZ2V0RnVuYy5hcHBseSh0aGlzLCBhcmd1bWVudHMpICAgICAgICAgICAgIC8vIFJldHVybmluZyB0aGUgcmVzdWx0IG9mIHRoZSB0YXJnZXQgYXBwbHlpbmcgdGhlIHRocm90dGxlZCBzY29wZSBhbmQgYXJncy5cbiAgICB9XG4gIH1cbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9saWIvdGhyb3R0bGUuanMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBU0E7O0FBQ0E7QUFDQTtBQUNBOztBQUNBOztBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

eval("/* WEBPACK VAR INJECTION */(function(module) {/*!\r\n * @name JavaScript/NodeJS Merge v1.2.0\r\n * @author yeikos\r\n * @repository https://github.com/yeikos/js.merge\r\n\r\n * Copyright 2014 yeikos - MIT license\r\n * https://raw.github.com/yeikos/js.merge/master/LICENSE\r\n */\r\n\r\n;(function(isNode) {\r\n\r\n\t/**\r\n\t * Merge one or more objects \r\n\t * @param bool? clone\r\n\t * @param mixed,... arguments\r\n\t * @return object\r\n\t */\r\n\r\n\tvar Public = function(clone) {\r\n\r\n\t\treturn merge(clone === true, false, arguments);\r\n\r\n\t}, publicName = 'merge';\r\n\r\n\t/**\r\n\t * Merge two or more objects recursively \r\n\t * @param bool? clone\r\n\t * @param mixed,... arguments\r\n\t * @return object\r\n\t */\r\n\r\n\tPublic.recursive = function(clone) {\r\n\r\n\t\treturn merge(clone === true, true, arguments);\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Clone the input removing any reference\r\n\t * @param mixed input\r\n\t * @return mixed\r\n\t */\r\n\r\n\tPublic.clone = function(input) {\r\n\r\n\t\tvar output = input,\r\n\t\t\ttype = typeOf(input),\r\n\t\t\tindex, size;\r\n\r\n\t\tif (type === 'array') {\r\n\r\n\t\t\toutput = [];\r\n\t\t\tsize = input.length;\r\n\r\n\t\t\tfor (index=0;index<size;++index)\r\n\r\n\t\t\t\toutput[index] = Public.clone(input[index]);\r\n\r\n\t\t} else if (type === 'object') {\r\n\r\n\t\t\toutput = {};\r\n\r\n\t\t\tfor (index in input)\r\n\r\n\t\t\t\toutput[index] = Public.clone(input[index]);\r\n\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\r\n\t};\r\n\r\n\t/**\r\n\t * Merge two objects recursively\r\n\t * @param mixed input\r\n\t * @param mixed extend\r\n\t * @return mixed\r\n\t */\r\n\r\n\tfunction merge_recursive(base, extend) {\r\n\r\n\t\tif (typeOf(base) !== 'object')\r\n\r\n\t\t\treturn extend;\r\n\r\n\t\tfor (var key in extend) {\r\n\r\n\t\t\tif (typeOf(base[key]) === 'object' && typeOf(extend[key]) === 'object') {\r\n\r\n\t\t\t\tbase[key] = merge_recursive(base[key], extend[key]);\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbase[key] = extend[key];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn base;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Merge two or more objects\r\n\t * @param bool clone\r\n\t * @param bool recursive\r\n\t * @param array argv\r\n\t * @return object\r\n\t */\r\n\r\n\tfunction merge(clone, recursive, argv) {\r\n\r\n\t\tvar result = argv[0],\r\n\t\t\tsize = argv.length;\r\n\r\n\t\tif (clone || typeOf(result) !== 'object')\r\n\r\n\t\t\tresult = {};\r\n\r\n\t\tfor (var index=0;index<size;++index) {\r\n\r\n\t\t\tvar item = argv[index],\r\n\r\n\t\t\t\ttype = typeOf(item);\r\n\r\n\t\t\tif (type !== 'object') continue;\r\n\r\n\t\t\tfor (var key in item) {\r\n\r\n\t\t\t\tvar sitem = clone ? Public.clone(item[key]) : item[key];\r\n\r\n\t\t\t\tif (recursive) {\r\n\r\n\t\t\t\t\tresult[key] = merge_recursive(result[key], sitem);\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tresult[key] = sitem;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Get type of variable\r\n\t * @param mixed input\r\n\t * @return string\r\n\t *\r\n\t * @see http://jsperf.com/typeofvar\r\n\t */\r\n\r\n\tfunction typeOf(input) {\r\n\r\n\t\treturn ({}).toString.call(input).slice(8, -1).toLowerCase();\r\n\r\n\t}\r\n\r\n\tif (isNode) {\r\n\r\n\t\tmodule.exports = Public;\r\n\r\n\t} else {\r\n\r\n\t\twindow[publicName] = Public;\r\n\r\n\t}\r\n\r\n})(typeof module === 'object' && module && typeof module.exports === 'object' && module.exports);\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(38)(module)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8vaG9tZS9qb3JnZS9kZXYvZ2FsbC9ub2RlX21vZHVsZXMvbWVyZ2UvbWVyZ2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyohXHJcbiAqIEBuYW1lIEphdmFTY3JpcHQvTm9kZUpTIE1lcmdlIHYxLjIuMFxyXG4gKiBAYXV0aG9yIHllaWtvc1xyXG4gKiBAcmVwb3NpdG9yeSBodHRwczovL2dpdGh1Yi5jb20veWVpa29zL2pzLm1lcmdlXHJcblxyXG4gKiBDb3B5cmlnaHQgMjAxNCB5ZWlrb3MgLSBNSVQgbGljZW5zZVxyXG4gKiBodHRwczovL3Jhdy5naXRodWIuY29tL3llaWtvcy9qcy5tZXJnZS9tYXN0ZXIvTElDRU5TRVxyXG4gKi9cclxuXHJcbjsoZnVuY3Rpb24oaXNOb2RlKSB7XHJcblxyXG5cdC8qKlxyXG5cdCAqIE1lcmdlIG9uZSBvciBtb3JlIG9iamVjdHMgXHJcblx0ICogQHBhcmFtIGJvb2w/IGNsb25lXHJcblx0ICogQHBhcmFtIG1peGVkLC4uLiBhcmd1bWVudHNcclxuXHQgKiBAcmV0dXJuIG9iamVjdFxyXG5cdCAqL1xyXG5cclxuXHR2YXIgUHVibGljID0gZnVuY3Rpb24oY2xvbmUpIHtcclxuXHJcblx0XHRyZXR1cm4gbWVyZ2UoY2xvbmUgPT09IHRydWUsIGZhbHNlLCBhcmd1bWVudHMpO1xyXG5cclxuXHR9LCBwdWJsaWNOYW1lID0gJ21lcmdlJztcclxuXHJcblx0LyoqXHJcblx0ICogTWVyZ2UgdHdvIG9yIG1vcmUgb2JqZWN0cyByZWN1cnNpdmVseSBcclxuXHQgKiBAcGFyYW0gYm9vbD8gY2xvbmVcclxuXHQgKiBAcGFyYW0gbWl4ZWQsLi4uIGFyZ3VtZW50c1xyXG5cdCAqIEByZXR1cm4gb2JqZWN0XHJcblx0ICovXHJcblxyXG5cdFB1YmxpYy5yZWN1cnNpdmUgPSBmdW5jdGlvbihjbG9uZSkge1xyXG5cclxuXHRcdHJldHVybiBtZXJnZShjbG9uZSA9PT0gdHJ1ZSwgdHJ1ZSwgYXJndW1lbnRzKTtcclxuXHJcblx0fTtcclxuXHJcblx0LyoqXHJcblx0ICogQ2xvbmUgdGhlIGlucHV0IHJlbW92aW5nIGFueSByZWZlcmVuY2VcclxuXHQgKiBAcGFyYW0gbWl4ZWQgaW5wdXRcclxuXHQgKiBAcmV0dXJuIG1peGVkXHJcblx0ICovXHJcblxyXG5cdFB1YmxpYy5jbG9uZSA9IGZ1bmN0aW9uKGlucHV0KSB7XHJcblxyXG5cdFx0dmFyIG91dHB1dCA9IGlucHV0LFxyXG5cdFx0XHR0eXBlID0gdHlwZU9mKGlucHV0KSxcclxuXHRcdFx0aW5kZXgsIHNpemU7XHJcblxyXG5cdFx0aWYgKHR5cGUgPT09ICdhcnJheScpIHtcclxuXHJcblx0XHRcdG91dHB1dCA9IFtdO1xyXG5cdFx0XHRzaXplID0gaW5wdXQubGVuZ3RoO1xyXG5cclxuXHRcdFx0Zm9yIChpbmRleD0wO2luZGV4PHNpemU7KytpbmRleClcclxuXHJcblx0XHRcdFx0b3V0cHV0W2luZGV4XSA9IFB1YmxpYy5jbG9uZShpbnB1dFtpbmRleF0pO1xyXG5cclxuXHRcdH0gZWxzZSBpZiAodHlwZSA9PT0gJ29iamVjdCcpIHtcclxuXHJcblx0XHRcdG91dHB1dCA9IHt9O1xyXG5cclxuXHRcdFx0Zm9yIChpbmRleCBpbiBpbnB1dClcclxuXHJcblx0XHRcdFx0b3V0cHV0W2luZGV4XSA9IFB1YmxpYy5jbG9uZShpbnB1dFtpbmRleF0pO1xyXG5cclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4gb3V0cHV0O1xyXG5cclxuXHR9O1xyXG5cclxuXHQvKipcclxuXHQgKiBNZXJnZSB0d28gb2JqZWN0cyByZWN1cnNpdmVseVxyXG5cdCAqIEBwYXJhbSBtaXhlZCBpbnB1dFxyXG5cdCAqIEBwYXJhbSBtaXhlZCBleHRlbmRcclxuXHQgKiBAcmV0dXJuIG1peGVkXHJcblx0ICovXHJcblxyXG5cdGZ1bmN0aW9uIG1lcmdlX3JlY3Vyc2l2ZShiYXNlLCBleHRlbmQpIHtcclxuXHJcblx0XHRpZiAodHlwZU9mKGJhc2UpICE9PSAnb2JqZWN0JylcclxuXHJcblx0XHRcdHJldHVybiBleHRlbmQ7XHJcblxyXG5cdFx0Zm9yICh2YXIga2V5IGluIGV4dGVuZCkge1xyXG5cclxuXHRcdFx0aWYgKHR5cGVPZihiYXNlW2tleV0pID09PSAnb2JqZWN0JyAmJiB0eXBlT2YoZXh0ZW5kW2tleV0pID09PSAnb2JqZWN0Jykge1xyXG5cclxuXHRcdFx0XHRiYXNlW2tleV0gPSBtZXJnZV9yZWN1cnNpdmUoYmFzZVtrZXldLCBleHRlbmRba2V5XSk7XHJcblxyXG5cdFx0XHR9IGVsc2Uge1xyXG5cclxuXHRcdFx0XHRiYXNlW2tleV0gPSBleHRlbmRba2V5XTtcclxuXHJcblx0XHRcdH1cclxuXHJcblx0XHR9XHJcblxyXG5cdFx0cmV0dXJuIGJhc2U7XHJcblxyXG5cdH1cclxuXHJcblx0LyoqXHJcblx0ICogTWVyZ2UgdHdvIG9yIG1vcmUgb2JqZWN0c1xyXG5cdCAqIEBwYXJhbSBib29sIGNsb25lXHJcblx0ICogQHBhcmFtIGJvb2wgcmVjdXJzaXZlXHJcblx0ICogQHBhcmFtIGFycmF5IGFyZ3ZcclxuXHQgKiBAcmV0dXJuIG9iamVjdFxyXG5cdCAqL1xyXG5cclxuXHRmdW5jdGlvbiBtZXJnZShjbG9uZSwgcmVjdXJzaXZlLCBhcmd2KSB7XHJcblxyXG5cdFx0dmFyIHJlc3VsdCA9IGFyZ3ZbMF0sXHJcblx0XHRcdHNpemUgPSBhcmd2Lmxlbmd0aDtcclxuXHJcblx0XHRpZiAoY2xvbmUgfHwgdHlwZU9mKHJlc3VsdCkgIT09ICdvYmplY3QnKVxyXG5cclxuXHRcdFx0cmVzdWx0ID0ge307XHJcblxyXG5cdFx0Zm9yICh2YXIgaW5kZXg9MDtpbmRleDxzaXplOysraW5kZXgpIHtcclxuXHJcblx0XHRcdHZhciBpdGVtID0gYXJndltpbmRleF0sXHJcblxyXG5cdFx0XHRcdHR5cGUgPSB0eXBlT2YoaXRlbSk7XHJcblxyXG5cdFx0XHRpZiAodHlwZSAhPT0gJ29iamVjdCcpIGNvbnRpbnVlO1xyXG5cclxuXHRcdFx0Zm9yICh2YXIga2V5IGluIGl0ZW0pIHtcclxuXHJcblx0XHRcdFx0dmFyIHNpdGVtID0gY2xvbmUgPyBQdWJsaWMuY2xvbmUoaXRlbVtrZXldKSA6IGl0ZW1ba2V5XTtcclxuXHJcblx0XHRcdFx0aWYgKHJlY3Vyc2l2ZSkge1xyXG5cclxuXHRcdFx0XHRcdHJlc3VsdFtrZXldID0gbWVyZ2VfcmVjdXJzaXZlKHJlc3VsdFtrZXldLCBzaXRlbSk7XHJcblxyXG5cdFx0XHRcdH0gZWxzZSB7XHJcblxyXG5cdFx0XHRcdFx0cmVzdWx0W2tleV0gPSBzaXRlbTtcclxuXHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0fVxyXG5cclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4gcmVzdWx0O1xyXG5cclxuXHR9XHJcblxyXG5cdC8qKlxyXG5cdCAqIEdldCB0eXBlIG9mIHZhcmlhYmxlXHJcblx0ICogQHBhcmFtIG1peGVkIGlucHV0XHJcblx0ICogQHJldHVybiBzdHJpbmdcclxuXHQgKlxyXG5cdCAqIEBzZWUgaHR0cDovL2pzcGVyZi5jb20vdHlwZW9mdmFyXHJcblx0ICovXHJcblxyXG5cdGZ1bmN0aW9uIHR5cGVPZihpbnB1dCkge1xyXG5cclxuXHRcdHJldHVybiAoe30pLnRvU3RyaW5nLmNhbGwoaW5wdXQpLnNsaWNlKDgsIC0xKS50b0xvd2VyQ2FzZSgpO1xyXG5cclxuXHR9XHJcblxyXG5cdGlmIChpc05vZGUpIHtcclxuXHJcblx0XHRtb2R1bGUuZXhwb3J0cyA9IFB1YmxpYztcclxuXHJcblx0fSBlbHNlIHtcclxuXHJcblx0XHR3aW5kb3dbcHVibGljTmFtZV0gPSBQdWJsaWM7XHJcblxyXG5cdH1cclxuXHJcbn0pKHR5cGVvZiBtb2R1bGUgPT09ICdvYmplY3QnICYmIG1vZHVsZSAmJiB0eXBlb2YgbW9kdWxlLmV4cG9ydHMgPT09ICdvYmplY3QnICYmIG1vZHVsZS5leHBvcnRzKTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vbWVyZ2UvbWVyZ2UuanNcbi8vIG1vZHVsZSBpZCA9IDNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/*\n Image gallery auto justified using Flickr's justified-layout,\n Riot app, dispatcher added inspired by Flux.\n */\n\n\n__webpack_require__(20); // css next no me esta gustando por el momento\n\nvar loadPolyfills = __webpack_require__(8);\n\nvar riot = __webpack_require__(0);\nvar GalleryStore = __webpack_require__(19);\nvar dispatcher = __webpack_require__(5);\n// tags\n__webpack_require__(17);\n__webpack_require__(14);\n__webpack_require__(11);\n__webpack_require__(12);\n__webpack_require__(16);\n__webpack_require__(13);\n__webpack_require__(15);\n\nfunction main(err) {\n  if (err) throw err;\n\n  var galleryStore = new GalleryStore(dispatcher);\n  dispatcher.addStore(galleryStore);\n\n  riot.mount('justified-gallery', { store: galleryStore });\n}\n\nloadPolyfills(['Array.prototype.find', 'Object.assign', 'Promise'], main);//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8vaG9tZS9qb3JnZS9kZXYvZ2FsbC9zcmMvYXBwLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXG4gSW1hZ2UgZ2FsbGVyeSBhdXRvIGp1c3RpZmllZCB1c2luZyBGbGlja3IncyBqdXN0aWZpZWQtbGF5b3V0LFxuIFJpb3QgYXBwLCBkaXNwYXRjaGVyIGFkZGVkIGluc3BpcmVkIGJ5IEZsdXguXG4gKi9cbid1c2Ugc3RyaWN0J1xuXG5yZXF1aXJlKCcuL2Nzcy9tYWluLmNzcycpIC8vIGNzcyBuZXh0IG5vIG1lIGVzdGEgZ3VzdGFuZG8gcG9yIGVsIG1vbWVudG9cblxuY29uc3QgbG9hZFBvbHlmaWxscyA9IHJlcXVpcmUoJy4vbGliL2xvYWRQb2x5ZmlsbHMnKVxuXG5jb25zdCByaW90ID0gcmVxdWlyZSgncmlvdCcpXG5jb25zdCBHYWxsZXJ5U3RvcmUgPSByZXF1aXJlKCcuL3N0b3Jlcy9wb3J0Zm9saW8tc3RvcmUnKVxuY29uc3QgZGlzcGF0Y2hlciA9IHJlcXVpcmUoJy4vZGlzcGF0Y2hlcicpXG4vLyB0YWdzXG5yZXF1aXJlKCdyYXcnKVxucmVxdWlyZSgnaW1nLWNvbXAnKVxucmVxdWlyZSgnYm94JylcbnJlcXVpcmUoJ2NvbnRhaW5lcicpXG5yZXF1aXJlKCdtb2RhbCcpXG5yZXF1aXJlKCdnYWxsZXJpZXMtbWVudScpXG5yZXF1aXJlKCdqdXN0aWZpZWQtZ2FsbGVyeScpXG5cbmZ1bmN0aW9uIG1haW4gKGVycikge1xuICBpZiAoZXJyKSB0aHJvdyBlcnJcblxuICBsZXQgZ2FsbGVyeVN0b3JlID0gbmV3IEdhbGxlcnlTdG9yZShkaXNwYXRjaGVyKVxuICBkaXNwYXRjaGVyLmFkZFN0b3JlKGdhbGxlcnlTdG9yZSlcblxuICByaW90Lm1vdW50KCdqdXN0aWZpZWQtZ2FsbGVyeScsIHtzdG9yZTogZ2FsbGVyeVN0b3JlfSlcbn1cblxubG9hZFBvbHlmaWxscyhbJ0FycmF5LnByb3RvdHlwZS5maW5kJywgJ09iamVjdC5hc3NpZ24nLCAnUHJvbWlzZSddLCBtYWluKVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2FwcC5qcyJdLCJtYXBwaW5ncyI6Ijs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// RiotControl dispatcher.\n// https://github.com/jimsparkman/RiotControl\n\n\n\nmodule.exports = {\n\n  // Dispatcher actions.\n  GALLERY_INIT: 'GALLERY_INIT',\n  GALLERY_LOAD: 'GALLERY_LOAD',\n  GALLERY_LOADED: 'GALLERY_LOADED',\n  IMAGE_CLICK: 'IMAGE_CLICK',\n  IMG_ZOOM_IN: 'IMG_ZOOM_IN',\n  IMG_ZOOM_OUT: 'IMG_ZOOM_OUT',\n  WINDOW_RESIZE: 'WINDOW_RESIZE',\n  TRANSITION_END: 'TRANSITION_END',\n  SWITCH_IMAGE: 'SWITCH_IMAGE',\n\n  _stores: [],\n\n  addStore: function addStore(store) {\n    this._stores.push(store);\n  },\n\n  trigger: function trigger() {\n    var args = [].slice.call(arguments);\n    // console.log('dispatcher: trigger: ' + args);\n    this._stores.forEach(function (el) {\n      el.trigger.apply(null, args);\n    });\n  },\n\n  on: function on(ev, cb) {\n    this._stores.forEach(function (el) {\n      el.on(ev, cb);\n    });\n  },\n\n  off: function off(ev, cb) {\n    this._stores.forEach(function (el) {\n      if (cb) el.off(ev, cb);else el.off(ev);\n    });\n  },\n\n  one: function one(ev, cb) {\n    this._stores.forEach(function (el) {\n      el.one(ev, cb);\n    });\n  }\n\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8vaG9tZS9qb3JnZS9kZXYvZ2FsbC9zcmMvZGlzcGF0Y2hlci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBSaW90Q29udHJvbCBkaXNwYXRjaGVyLlxuLy8gaHR0cHM6Ly9naXRodWIuY29tL2ppbXNwYXJrbWFuL1Jpb3RDb250cm9sXG5cbm1vZHVsZS5leHBvcnRzID0ge1xuXG4gIC8vIERpc3BhdGNoZXIgYWN0aW9ucy5cbiAgR0FMTEVSWV9JTklUOiAnR0FMTEVSWV9JTklUJyxcbiAgR0FMTEVSWV9MT0FEOiAnR0FMTEVSWV9MT0FEJyxcbiAgR0FMTEVSWV9MT0FERUQ6ICdHQUxMRVJZX0xPQURFRCcsXG4gIElNQUdFX0NMSUNLOiAnSU1BR0VfQ0xJQ0snLFxuICBJTUdfWk9PTV9JTjogJ0lNR19aT09NX0lOJyxcbiAgSU1HX1pPT01fT1VUOiAnSU1HX1pPT01fT1VUJyxcbiAgV0lORE9XX1JFU0laRTogJ1dJTkRPV19SRVNJWkUnLFxuICBUUkFOU0lUSU9OX0VORDogJ1RSQU5TSVRJT05fRU5EJyxcbiAgU1dJVENIX0lNQUdFOiAnU1dJVENIX0lNQUdFJyxcblxuICBfc3RvcmVzOiBbXSxcblxuICBhZGRTdG9yZSAoc3RvcmUpIHtcbiAgICB0aGlzLl9zdG9yZXMucHVzaChzdG9yZSlcbiAgfSxcblxuICB0cmlnZ2VyICgpIHtcbiAgICBsZXQgYXJncyA9IFtdLnNsaWNlLmNhbGwoYXJndW1lbnRzKVxuICAgIC8vIGNvbnNvbGUubG9nKCdkaXNwYXRjaGVyOiB0cmlnZ2VyOiAnICsgYXJncyk7XG4gICAgdGhpcy5fc3RvcmVzLmZvckVhY2goZnVuY3Rpb24gKGVsKSB7XG4gICAgICBlbC50cmlnZ2VyLmFwcGx5KG51bGwsIGFyZ3MpXG4gICAgfSlcbiAgfSxcblxuICBvbiAoZXYsIGNiKSB7XG4gICAgdGhpcy5fc3RvcmVzLmZvckVhY2goZnVuY3Rpb24gKGVsKSB7XG4gICAgICBlbC5vbihldiwgY2IpXG4gICAgfSlcbiAgfSxcblxuICBvZmYgKGV2LCBjYikge1xuICAgIHRoaXMuX3N0b3Jlcy5mb3JFYWNoKGZ1bmN0aW9uIChlbCkge1xuICAgICAgaWYgKGNiKSBlbC5vZmYoZXYsIGNiKVxuICAgICAgZWxzZSBlbC5vZmYoZXYpXG4gICAgfSlcbiAgfSxcblxuICBvbmUgKGV2LCBjYikge1xuICAgIHRoaXMuX3N0b3Jlcy5mb3JFYWNoKGZ1bmN0aW9uIChlbCkge1xuICAgICAgZWwub25lKGV2LCBjYilcbiAgICB9KVxuICB9XG5cbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9kaXNwYXRjaGVyLmpzIl0sIm1hcHBpbmdzIjoiOzs7OztBQUdBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar isFileProtocol = function isFileProtocol(u) {\n  return (/^file:\\/\\//i.test(u)\n  );\n};\nvar isValidStatus = function isValidStatus(s) {\n  return s >= 200 && s < 300 || s === 304;\n};\nvar getErrObj = function getErrObj(err, xhr) {\n  return Object.assign(new Error(err), xhr);\n};\n\n/**\n * Super simple ajax get request of a json resource.\n *\n * @param      {String}    url     The url.\n * @param      {Function}  cb      The callback.\n */\nmodule.exports = function getJSON(url, callback) {\n  var xhr = new window.XMLHttpRequest();\n\n  var aborted = undefined;\n  var xhrAbort = xhr.abort;\n  xhr.abort = function () {\n    return (aborted = true) && xhrAbort.call(xhr);\n  };\n\n  xhr.open('GET', url, true);\n\n  xhr.onreadystatechange = function () {\n    if (!aborted && xhr.readyState === 4) {\n      return isValidStatus(xhr.status) || isFileProtocol(url) ? callback(false, JSON.parse(xhr.responseText)) : callback(getErrObj('Server response: ' + xhr.statusText, xhr));\n    }\n  };\n\n  xhr.onerror = function (e) {\n    return callback(getErrObj('Request failed.', xhr));\n  };\n\n  xhr.send(null);\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8vaG9tZS9qb3JnZS9kZXYvZ2FsbC9zcmMvbGliL2dldEpTT04uanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgaXNGaWxlUHJvdG9jb2wgPSAodSkgPT4gL15maWxlOlxcL1xcLy9pLnRlc3QodSlcbmNvbnN0IGlzVmFsaWRTdGF0dXMgPSAocykgPT4gKHMgPj0gMjAwICYmIHMgPCAzMDApIHx8IHMgPT09IDMwNFxuY29uc3QgZ2V0RXJyT2JqID0gKGVyciwgeGhyKSA9PiBPYmplY3QuYXNzaWduKG5ldyBFcnJvcihlcnIpLCB4aHIpXG5cbi8qKlxuICogU3VwZXIgc2ltcGxlIGFqYXggZ2V0IHJlcXVlc3Qgb2YgYSBqc29uIHJlc291cmNlLlxuICpcbiAqIEBwYXJhbSAgICAgIHtTdHJpbmd9ICAgIHVybCAgICAgVGhlIHVybC5cbiAqIEBwYXJhbSAgICAgIHtGdW5jdGlvbn0gIGNiICAgICAgVGhlIGNhbGxiYWNrLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGdldEpTT04gKHVybCwgY2FsbGJhY2spIHtcbiAgbGV0IHhociA9IG5ldyB3aW5kb3cuWE1MSHR0cFJlcXVlc3QoKVxuXG4gIGxldCBhYm9ydGVkXG4gIGxldCB4aHJBYm9ydCA9IHhoci5hYm9ydFxuICB4aHIuYWJvcnQgPSAoKSA9PiAoYWJvcnRlZCA9IHRydWUpICYmIHhockFib3J0LmNhbGwoeGhyKVxuXG4gIHhoci5vcGVuKCdHRVQnLCB1cmwsIHRydWUpXG5cbiAgeGhyLm9ucmVhZHlzdGF0ZWNoYW5nZSA9ICgpID0+IHtcbiAgICBpZiAoIWFib3J0ZWQgJiYgeGhyLnJlYWR5U3RhdGUgPT09IDQpIHtcbiAgICAgIHJldHVybiBpc1ZhbGlkU3RhdHVzKHhoci5zdGF0dXMpIHx8IGlzRmlsZVByb3RvY29sKHVybClcbiAgICAgICAgPyBjYWxsYmFjayhmYWxzZSwgSlNPTi5wYXJzZSh4aHIucmVzcG9uc2VUZXh0KSlcbiAgICAgICAgOiBjYWxsYmFjayhnZXRFcnJPYmooJ1NlcnZlciByZXNwb25zZTogJyArIHhoci5zdGF0dXNUZXh0LCB4aHIpKVxuICAgIH1cbiAgfVxuXG4gIHhoci5vbmVycm9yID0gKGUpID0+IGNhbGxiYWNrKGdldEVyck9iaignUmVxdWVzdCBmYWlsZWQuJywgeGhyKSlcblxuICB4aHIuc2VuZChudWxsKVxufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2xpYi9nZXRKU09OLmpzIl0sIm1hcHBpbmdzIjoiOztBQUFBO0FBQUE7O0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFDQTs7Ozs7OztBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// implementation from standard node.js 'util' module\n\n\nmodule.exports = function inherits(ctor, superCtor) {\n  ctor.super_ = superCtor;\n  ctor.prototype = Object.create(superCtor.prototype, {\n    constructor: {\n      value: ctor,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8vaG9tZS9qb3JnZS9kZXYvZ2FsbC9zcmMvbGliL2luaGVyaXRzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGltcGxlbWVudGF0aW9uIGZyb20gc3RhbmRhcmQgbm9kZS5qcyAndXRpbCcgbW9kdWxlXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGluaGVyaXRzKGN0b3IsIHN1cGVyQ3Rvcikge1xuICBjdG9yLnN1cGVyXyA9IHN1cGVyQ3RvcjtcbiAgY3Rvci5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ3Rvci5wcm90b3R5cGUsIHtcbiAgICBjb25zdHJ1Y3Rvcjoge1xuICAgICAgdmFsdWU6IGN0b3IsXG4gICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlXG4gICAgfVxuICB9KTtcbn07XG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2xpYi9pbmhlcml0cy5qcyJdLCJtYXBwaW5ncyI6Ijs7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Loads polyfills.\n *\n * @param      {Array}     expectedFeatures  The expected features\n * @param      {Function}  loadHandler       The callback\n */\n\n\nmodule.exports = function loadPolyfills(expectedFeatures, loadHandler) {\n  // If any features need to be polyfilled.\n  if (expectedFeatures.some(isNotFunction)) {\n    // List the features that need to be polyfilled.\n    var missingFeatures = expectedFeatures.filter(isNotFunction);\n    // Create the url with 'ua' set to a supported browser and 'always'\n    var src = 'https://polyfill.io/v2/polyfill.min.js?features=' + missingFeatures.join(',') + '&flags=gated,always&ua=chrome/50';\n    // Create a script tag, load the polyfills in it and add it to head.\n    loadScript(src, loadHandler);\n  } else {\n    // If no polyfills are required, invoke the app.\n    loadHandler();\n  }\n};\n\n// For now just cheking if the feature is not a function.\n// TODO A list to diferenciate exeptions and create filters to handle them.\n\n/**\n * Determines if the requested feature is not a function.\n *\n * @param      {global property}   feature  The browser feature\n * @return     {boolean}           True if not function, False otherwise.\n */\nvar isNotFunction = function isNotFunction(feature) {\n  return typeof feature.split('.').reduce(function (global, prop) {\n    return global[prop];\n  }, window) !== 'function';\n};\n\n/**\n * Loads a script in the head element, and calls back when loaded.\n *\n * @param      {string}    url     The source url\n * @param      {Function}  cb    The callback\n */\nfunction loadScript(url, cb) {\n  var script = document.createElement('script');\n  script.src = url;\n  script.onload = function () {\n    return cb();\n  };\n  script.onerror = function () {\n    return cb(new URIError('Failed to load script ' + url));\n  };\n  document.head.appendChild(script);\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8vaG9tZS9qb3JnZS9kZXYvZ2FsbC9zcmMvbGliL2xvYWRQb2x5ZmlsbHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBMb2FkcyBwb2x5ZmlsbHMuXG4gKlxuICogQHBhcmFtICAgICAge0FycmF5fSAgICAgZXhwZWN0ZWRGZWF0dXJlcyAgVGhlIGV4cGVjdGVkIGZlYXR1cmVzXG4gKiBAcGFyYW0gICAgICB7RnVuY3Rpb259ICBsb2FkSGFuZGxlciAgICAgICBUaGUgY2FsbGJhY2tcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBsb2FkUG9seWZpbGxzIChleHBlY3RlZEZlYXR1cmVzLCBsb2FkSGFuZGxlcikge1xuICAvLyBJZiBhbnkgZmVhdHVyZXMgbmVlZCB0byBiZSBwb2x5ZmlsbGVkLlxuICBpZiAoZXhwZWN0ZWRGZWF0dXJlcy5zb21lKGlzTm90RnVuY3Rpb24pKSB7XG4gICAgLy8gTGlzdCB0aGUgZmVhdHVyZXMgdGhhdCBuZWVkIHRvIGJlIHBvbHlmaWxsZWQuXG4gICAgbGV0IG1pc3NpbmdGZWF0dXJlcyA9IGV4cGVjdGVkRmVhdHVyZXMuZmlsdGVyKGlzTm90RnVuY3Rpb24pXG4gICAgLy8gQ3JlYXRlIHRoZSB1cmwgd2l0aCAndWEnIHNldCB0byBhIHN1cHBvcnRlZCBicm93c2VyIGFuZCAnYWx3YXlzJ1xuICAgIGxldCBzcmMgPSAnaHR0cHM6Ly9wb2x5ZmlsbC5pby92Mi9wb2x5ZmlsbC5taW4uanM/ZmVhdHVyZXM9JyArIG1pc3NpbmdGZWF0dXJlcy5qb2luKCcsJykgKyAnJmZsYWdzPWdhdGVkLGFsd2F5cyZ1YT1jaHJvbWUvNTAnXG4gICAgLy8gQ3JlYXRlIGEgc2NyaXB0IHRhZywgbG9hZCB0aGUgcG9seWZpbGxzIGluIGl0IGFuZCBhZGQgaXQgdG8gaGVhZC5cbiAgICBsb2FkU2NyaXB0KHNyYywgbG9hZEhhbmRsZXIpXG4gIH0gZWxzZSB7XG4gICAgLy8gSWYgbm8gcG9seWZpbGxzIGFyZSByZXF1aXJlZCwgaW52b2tlIHRoZSBhcHAuXG4gICAgbG9hZEhhbmRsZXIoKVxuICB9XG59XG5cbi8vIEZvciBub3cganVzdCBjaGVraW5nIGlmIHRoZSBmZWF0dXJlIGlzIG5vdCBhIGZ1bmN0aW9uLlxuLy8gVE9ETyBBIGxpc3QgdG8gZGlmZXJlbmNpYXRlIGV4ZXB0aW9ucyBhbmQgY3JlYXRlIGZpbHRlcnMgdG8gaGFuZGxlIHRoZW0uXG5cbi8qKlxuICogRGV0ZXJtaW5lcyBpZiB0aGUgcmVxdWVzdGVkIGZlYXR1cmUgaXMgbm90IGEgZnVuY3Rpb24uXG4gKlxuICogQHBhcmFtICAgICAge2dsb2JhbCBwcm9wZXJ0eX0gICBmZWF0dXJlICBUaGUgYnJvd3NlciBmZWF0dXJlXG4gKiBAcmV0dXJuICAgICB7Ym9vbGVhbn0gICAgICAgICAgIFRydWUgaWYgbm90IGZ1bmN0aW9uLCBGYWxzZSBvdGhlcndpc2UuXG4gKi9cbmNvbnN0IGlzTm90RnVuY3Rpb24gPSBmZWF0dXJlID0+IHR5cGVvZiBmZWF0dXJlLnNwbGl0KCcuJykucmVkdWNlKChnbG9iYWwsIHByb3ApID0+IGdsb2JhbFtwcm9wXSwgd2luZG93KSAhPT0gJ2Z1bmN0aW9uJ1xuXG4vKipcbiAqIExvYWRzIGEgc2NyaXB0IGluIHRoZSBoZWFkIGVsZW1lbnQsIGFuZCBjYWxscyBiYWNrIHdoZW4gbG9hZGVkLlxuICpcbiAqIEBwYXJhbSAgICAgIHtzdHJpbmd9ICAgIHVybCAgICAgVGhlIHNvdXJjZSB1cmxcbiAqIEBwYXJhbSAgICAgIHtGdW5jdGlvbn0gIGNiICAgIFRoZSBjYWxsYmFja1xuICovXG5mdW5jdGlvbiBsb2FkU2NyaXB0ICh1cmwsIGNiKSB7XG4gIHZhciBzY3JpcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKVxuICBzY3JpcHQuc3JjID0gdXJsXG4gIHNjcmlwdC5vbmxvYWQgPSAoKSA9PiBjYigpXG4gIHNjcmlwdC5vbmVycm9yID0gKCkgPT4gY2IobmV3IFVSSUVycm9yKCdGYWlsZWQgdG8gbG9hZCBzY3JpcHQgJyArIHVybCkpXG4gIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoc2NyaXB0KVxufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2xpYi9sb2FkUG9seWZpbGxzLmpzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztBQU1BOztBQUVBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7Ozs7QUFVQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7Ozs7Ozs7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQUE7QUFDQTtBQUFBO0FBQUE7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _find = function _find(list, fn) {\n  return Array.prototype.find.call(list, fn);\n};\n\nvar getRuleIndex = function getRuleIndex(selector, styleSheet) {\n  var index = -1;\n  _find(styleSheet.cssRules, function (rule, idx) {\n    return rule.selectorText && rule.selectorText.toLowerCase() === selector.toLowerCase() ? index = idx : false;\n  });\n  return index;\n};\n\nvar findCSSRule = function findCSSRule(selector) {\n  var result = undefined;\n  var index = -1;\n  _find(document.styleSheets, function (styleSheet) {\n    index = getRuleIndex(selector, styleSheet);\n    return index !== -1 ? result = { sheet: styleSheet, index: index } : false;\n  });\n  return result || null;\n};\n\nmodule.exports = {\n  createStyleSheet: function createStyleSheet(id) {\n    var el = document.createElement('style');\n    el.appendChild(document.createTextNode(''));\n    el.media = 'screen';\n    if (id) el.id = id;\n    document.head.appendChild(el);\n    return el.sheet;\n  },\n  getCSSRule: function getCSSRule(selector, sheet) {\n    if (sheet) {\n      return sheet.cssRules[getRuleIndex(selector, sheet)];\n    }\n    var style = findCSSRule(selector);\n    return style.sheet.cssRules[style.index];\n  },\n  deleteCSSRule: function deleteCSSRule(selector, sheet) {\n    if (sheet) sheet.deleteRule(getRuleIndex(selector, sheet));else {\n      var style = findCSSRule(selector);\n      style.sheet.deleteRule(style.index);\n    }\n  },\n  addCSSRule: function addCSSRule(rule, sheet) {\n    sheet = sheet || document.styleSheets[0];\n    return sheet.cssRules[sheet.insertRule(rule, sheet.cssRules.length)];\n  },\n  updateCSSRule: function updateCSSRule(rule, sheet) {\n    var selectorRegex = /(.*?)(?= ?\\{)/;\n    var selector = rule.match(selectorRegex)[0];\n    this.deleteCSSRule(selector, sheet);\n    return this.addCSSRule(rule, sheet);\n  }\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8vaG9tZS9qb3JnZS9kZXYvZ2FsbC9zcmMvbGliL3N0eWxlU2hlZXRUb29sLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImxldCBfZmluZCA9IChsaXN0LCBmbikgPT4gQXJyYXkucHJvdG90eXBlLmZpbmQuY2FsbChsaXN0LCBmbilcblxuY29uc3QgZ2V0UnVsZUluZGV4ID0gZnVuY3Rpb24gKHNlbGVjdG9yLCBzdHlsZVNoZWV0KSB7XG4gIHZhciBpbmRleCA9IC0xXG4gIF9maW5kKHN0eWxlU2hlZXQuY3NzUnVsZXMsIChydWxlLCBpZHgpID0+IHtcbiAgICByZXR1cm4gcnVsZS5zZWxlY3RvclRleHQgJiZcbiAgICAgIHJ1bGUuc2VsZWN0b3JUZXh0LnRvTG93ZXJDYXNlKCkgPT09IHNlbGVjdG9yLnRvTG93ZXJDYXNlKClcbiAgICAgID8gKGluZGV4ID0gaWR4KVxuICAgICAgOiBmYWxzZVxuICB9KVxuICByZXR1cm4gaW5kZXhcbn1cblxuY29uc3QgZmluZENTU1J1bGUgPSBmdW5jdGlvbiAoc2VsZWN0b3IpIHtcbiAgbGV0IHJlc3VsdFxuICBsZXQgaW5kZXggPSAtMVxuICBfZmluZChkb2N1bWVudC5zdHlsZVNoZWV0cywgc3R5bGVTaGVldCA9PiB7XG4gICAgaW5kZXggPSBnZXRSdWxlSW5kZXgoc2VsZWN0b3IsIHN0eWxlU2hlZXQpXG4gICAgcmV0dXJuIGluZGV4ICE9PSAtMSA/IChyZXN1bHQgPSB7c2hlZXQ6IHN0eWxlU2hlZXQsIGluZGV4OiBpbmRleH0pIDogZmFsc2VcbiAgfSlcbiAgcmV0dXJuIHJlc3VsdCB8fCBudWxsXG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBjcmVhdGVTdHlsZVNoZWV0IChpZCkge1xuICAgIHZhciBlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJylcbiAgICBlbC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZSgnJykpXG4gICAgZWwubWVkaWEgPSAnc2NyZWVuJ1xuICAgIGlmIChpZCkgZWwuaWQgPSBpZFxuICAgIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoZWwpXG4gICAgcmV0dXJuIGVsLnNoZWV0XG4gIH0sXG4gIGdldENTU1J1bGUgKHNlbGVjdG9yLCBzaGVldCkge1xuICAgIGlmIChzaGVldCkge1xuICAgICAgcmV0dXJuIHNoZWV0LmNzc1J1bGVzW2dldFJ1bGVJbmRleChzZWxlY3Rvciwgc2hlZXQpXVxuICAgIH1cbiAgICB2YXIgc3R5bGUgPSBmaW5kQ1NTUnVsZShzZWxlY3RvcilcbiAgICByZXR1cm4gc3R5bGUuc2hlZXQuY3NzUnVsZXNbc3R5bGUuaW5kZXhdXG4gIH0sXG4gIGRlbGV0ZUNTU1J1bGUgKHNlbGVjdG9yLCBzaGVldCkge1xuICAgIGlmIChzaGVldCkgc2hlZXQuZGVsZXRlUnVsZShnZXRSdWxlSW5kZXgoc2VsZWN0b3IsIHNoZWV0KSlcbiAgICBlbHNlIHtcbiAgICAgIGxldCBzdHlsZSA9IGZpbmRDU1NSdWxlKHNlbGVjdG9yKVxuICAgICAgc3R5bGUuc2hlZXQuZGVsZXRlUnVsZShzdHlsZS5pbmRleClcbiAgICB9XG4gIH0sXG4gIGFkZENTU1J1bGUgKHJ1bGUsIHNoZWV0KSB7XG4gICAgc2hlZXQgPSBzaGVldCB8fCBkb2N1bWVudC5zdHlsZVNoZWV0c1swXVxuICAgIHJldHVybiBzaGVldC5jc3NSdWxlc1tzaGVldC5pbnNlcnRSdWxlKHJ1bGUsIHNoZWV0LmNzc1J1bGVzLmxlbmd0aCldXG4gIH0sXG4gIHVwZGF0ZUNTU1J1bGUgKHJ1bGUsIHNoZWV0KSB7XG4gICAgdmFyIHNlbGVjdG9yUmVnZXggPSAvKC4qPykoPz0gP1xceykvXG4gICAgdmFyIHNlbGVjdG9yID0gcnVsZS5tYXRjaChzZWxlY3RvclJlZ2V4KVswXVxuICAgIHRoaXMuZGVsZXRlQ1NTUnVsZShzZWxlY3Rvciwgc2hlZXQpXG4gICAgcmV0dXJuIHRoaXMuYWRkQ1NTUnVsZShydWxlLCBzaGVldClcbiAgfVxufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2xpYi9zdHlsZVNoZWV0VG9vbC5qcyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// borrowed from: gascrolldepth.js | v0.9 Licensed under the MIT and GPL licenses.\n// Copyright (c) 2015 Rob Flaherty (@robflaherty), Leigh McCulloch (@___leigh___)\n\n\nmodule.exports = {\n  getDocumentHeight: function getDocumentHeight() {\n    return Math.max(document.documentElement.scrollHeight, document.body.scrollHeight, document.documentElement.offsetHeight, document.body.offsetHeight, document.documentElement.clientHeight);\n  },\n  getWindowWidth: function getWindowWidth() {\n    return window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n  },\n  getWindowHeight: function getWindowHeight() {\n    return window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n  },\n  getPageYOffset: function getPageYOffset() {\n    return window.pageYOffset || (document.compatMode === 'CSS1Compat' ? document.documentElement.scrollTop : document.body.scrollTop);\n  },\n  getElementYOffsetToDocumentTop: function getElementYOffsetToDocumentTop(element) {\n    return element.getBoundingClientRect().top + this.getPageYOffset();\n  }\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvam9yZ2UvZGV2L2dhbGwvc3JjL2xpYi93aW5kb3dTaXplLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGJvcnJvd2VkIGZyb206IGdhc2Nyb2xsZGVwdGguanMgfCB2MC45IExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgYW5kIEdQTCBsaWNlbnNlcy5cbi8vIENvcHlyaWdodCAoYykgMjAxNSBSb2IgRmxhaGVydHkgKEByb2JmbGFoZXJ0eSksIExlaWdoIE1jQ3VsbG9jaCAoQF9fX2xlaWdoX19fKVxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGdldERvY3VtZW50SGVpZ2h0ICgpIHtcbiAgICByZXR1cm4gTWF0aC5tYXgoXG4gICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsSGVpZ2h0LCBkb2N1bWVudC5ib2R5LnNjcm9sbEhlaWdodCxcbiAgICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5vZmZzZXRIZWlnaHQsIGRvY3VtZW50LmJvZHkub2Zmc2V0SGVpZ2h0LFxuICAgICAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudEhlaWdodFxuICAgIClcbiAgfSxcbiAgZ2V0V2luZG93V2lkdGggKCkge1xuICAgIHJldHVybiB3aW5kb3cuaW5uZXJXaWR0aCB8fCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGggfHwgZG9jdW1lbnQuYm9keS5jbGllbnRXaWR0aFxuICB9LFxuICBnZXRXaW5kb3dIZWlnaHQgKCkge1xuICAgIHJldHVybiB3aW5kb3cuaW5uZXJIZWlnaHQgfHwgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudEhlaWdodCB8fCBkb2N1bWVudC5ib2R5LmNsaWVudEhlaWdodFxuICB9LFxuICBnZXRQYWdlWU9mZnNldCAoKSB7XG4gICAgcmV0dXJuIHdpbmRvdy5wYWdlWU9mZnNldCB8fCAoZG9jdW1lbnQuY29tcGF0TW9kZSA9PT0gJ0NTUzFDb21wYXQnID8gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcCA6IGRvY3VtZW50LmJvZHkuc2Nyb2xsVG9wKVxuICB9LFxuICBnZXRFbGVtZW50WU9mZnNldFRvRG9jdW1lbnRUb3AgKGVsZW1lbnQpIHtcbiAgICByZXR1cm4gZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS50b3AgKyB0aGlzLmdldFBhZ2VZT2Zmc2V0KClcbiAgfVxufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL2xpYi93aW5kb3dTaXplLmpzIl0sIm1hcHBpbmdzIjoiOzs7O0FBRUE7QUFDQTtBQUNBO0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(30);\n__webpack_require__(21);//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvam9yZ2UvZGV2L2dhbGwvc3JjL21vZHVsZXMvYm94L2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJy4vYm94LnRhZy5wdWcnKVxucmVxdWlyZSgnLi9ib3guY3NzJylcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9tb2R1bGVzL2JveC9pbmRleC5qcyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(31);\n__webpack_require__(22);//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvam9yZ2UvZGV2L2dhbGwvc3JjL21vZHVsZXMvY29udGFpbmVyL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJy4vY29udGFpbmVyLnRhZy5wdWcnKVxucmVxdWlyZSgnLi9jb250YWluZXIuY3NzJylcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9tb2R1bGVzL2NvbnRhaW5lci9pbmRleC5qcyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(32);\n__webpack_require__(23);//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvam9yZ2UvZGV2L2dhbGwvc3JjL21vZHVsZXMvZ2FsbGVyaWVzLW1lbnUvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnLi9nYWxsZXJpZXMtbWVudS50YWcucHVnJylcbnJlcXVpcmUoJy4vZ2FsbGVyaWVzLW1lbnUuY3NzJylcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9tb2R1bGVzL2dhbGxlcmllcy1tZW51L2luZGV4LmpzIl0sIm1hcHBpbmdzIjoiOztBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(24);\n__webpack_require__(33);//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvam9yZ2UvZGV2L2dhbGwvc3JjL21vZHVsZXMvaW1nLWNvbXAvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnLi9pbWctY29tcC5jc3MnKVxucmVxdWlyZSgnLi9pbWctY29tcC50YWcucHVnJylcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9tb2R1bGVzL2ltZy1jb21wL2luZGV4LmpzIl0sIm1hcHBpbmdzIjoiOztBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(34);\n__webpack_require__(25);//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvam9yZ2UvZGV2L2dhbGwvc3JjL21vZHVsZXMvanVzdGlmaWVkLWdhbGxlcnkvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnLi9qdXN0aWZpZWQtZ2FsbGVyeS50YWcucHVnJylcbnJlcXVpcmUoJy4vanVzdGlmaWVkLWdhbGxlcnkuY3NzJylcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9tb2R1bGVzL2p1c3RpZmllZC1nYWxsZXJ5L2luZGV4LmpzIl0sIm1hcHBpbmdzIjoiOztBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(35);\n__webpack_require__(26);//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvam9yZ2UvZGV2L2dhbGwvc3JjL21vZHVsZXMvbW9kYWwvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnLi9tb2RhbC50YWcucHVnJylcbnJlcXVpcmUoJy4vbW9kYWwuY3NzJylcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NyYy9tb2R1bGVzL21vZGFsL2luZGV4LmpzIl0sIm1hcHBpbmdzIjoiOztBQUFBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(36);//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvam9yZ2UvZGV2L2dhbGwvc3JjL21vZHVsZXMvcmF3L2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJy4vcmF3LnRhZy5wdWcnKVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIC4vc3JjL21vZHVsZXMvcmF3L2luZGV4LmpzIl0sIm1hcHBpbmdzIjoiOztBQUFBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Store definition.\n// Stores application logic and state that relate to a specific domain.\n// Responds to relevant events emitted by the dispatcher and emmits\n// change events to any listening views, so that they may react/redraw themselves.\n\n\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports['default'] = GalleryStore;\nvar Riot = __webpack_require__(0);\nvar config = __webpack_require__(27);\nvar justifiedLayout = __webpack_require__(28);\nvar getJSON = __webpack_require__(6);\nvar view = __webpack_require__(10);\n\nvar _require = __webpack_require__(9);\n\nvar createStyleSheet = _require.createStyleSheet;\nvar addCSSRule = _require.addCSSRule;\n\nvar _require2 = __webpack_require__(1);\n\nvar IN = _require2.IN;\nvar OUT = _require2.OUT;\nvar END = _require2.END;\nvar NEXT = _require2.NEXT;\nvar PREV = _require2.PREV;\n\nfunction GalleryStore(event) {\n  var _this = this;\n\n  Riot.observable(this); // Riot provides our event emitter.\n\n  this.CHANGED_EVENT = 'CHANGED_EVENT';\n  this.dispatcher = event;\n  this.config = config;\n\n  var triggerChanged = function triggerChanged() {\n    // Brute force update all.\n    _this.trigger(_this.CHANGED_EVENT);\n  };\n\n  // Event handlers.\n  this.one(event.GALLERY_INIT, function () {\n    init();\n    setRoutes();\n  });\n\n  this.on(event.GALLERY_LOAD, function (id) {\n    loadGalleryData(id);\n  });\n\n  this.on(event.GALLERY_LOADED, function () {\n    computeLayout();\n    triggerChanged();\n  });\n\n  this.on(event.WINDOW_RESIZE, function () {\n    computeLayout();\n    if (_this.isZoomIn) event.trigger(event.IMG_ZOOM_OUT);\n    triggerChanged();\n  });\n\n  this.on(event.IMAGE_CLICK, function (id) {\n    if (_this.isZoomEnabled) {\n      return _this.isZoomIn ? event.trigger(event.IMG_ZOOM_OUT, id) : event.trigger(event.IMG_ZOOM_IN, id);\n    }\n  });\n\n  this.on(event.IMG_ZOOM_IN, function (id) {\n    updateZoomYOffset();\n    updateZoomStyle();\n    handleZoom(IN, id);\n    triggerChanged();\n  });\n\n  this.on(event.IMG_ZOOM_OUT, function (id) {\n    handleZoom(OUT, id);\n    triggerChanged();\n  });\n\n  this.on(event.TRANSITION_END, function (id) {\n    handleZoom(END, id);\n    triggerChanged();\n  });\n\n  this.on(event.SWITCH_IMAGE, function (img) {\n    zoomNext(img);\n  });\n\n  var init = function init() {\n    _this.width = config.width;\n    createZoomStyle();\n  };\n\n  // ------------------------------------------------------------\n\n  var setRoutes = function setRoutes() {\n    _this.routes = config.galleries.map(function (gall) {\n      return gall.dir;\n    });\n    Riot.route('/' + _this.config.route + '/*', selectGallery);\n    Riot.route.start(true);\n  };\n\n  var selectGallery = function selectGallery(gallery) {\n    if (_this.routes.indexOf(gallery) !== -1) {\n      event.trigger(event.GALLERY_LOAD, gallery);\n    }\n  };\n\n  // Load -- data\n  var loadGalleryData = function loadGalleryData(id) {\n    getJSON('/assets/galleries/' + id + '.json', loadGallery);\n  };\n\n  var loadGallery = function loadGallery(err, galleryData) {\n    if (err) throw err;\n    Object.assign(_this, galleryData);\n    _this.path = config.path + _this.dir;\n    _this.zoomWidth = _this.zoomWidth || config.zoomWidth;\n    _this.zoomHeight = _this.zoomHeight || config.zoomHeight;\n    event.trigger(event.GALLERY_LOADED);\n  };\n\n  // ------------------------------------------------------------\n  // Esto puede ir en un componente zoom-box\n\n  var computeLayout = function computeLayout() {\n    updateSizes();\n    _this.computeBoxesLayout();\n    if (ableToZoom()) computeZoomBox();\n  };\n\n  // Window size calculations helper\n  var updateSizes = function updateSizes() {\n    var winWidth = view.getWindowWidth();\n    _this.width = config.width < winWidth ? config.width : winWidth - 30;\n    _this.clientHeight = view.getWindowHeight();\n  };\n  // Zoom -- calculations\n  var computeZoomBox = function computeZoomBox() {\n    var zoomBox = _this.zoomBox = {};\n    zoomBox.width = _this.zoomWidth < _this.width ? _this.zoomWidth : _this.width - 20;\n    zoomBox.height = _this.zoomHeight < _this.clientHeight ? _this.zoomHeight : _this.clientHeight - 40;\n    zoomBox.top = (_this.height - zoomBox.height) / 2;\n    zoomBox.left = (_this.width - zoomBox.width) / 2;\n  };\n  // Zoom -- calculations\n  var updateZoomYOffset = function updateZoomYOffset() {\n    var room = view.getWindowHeight() < _this.height ? view.getWindowHeight() : _this.height;\n    _this.zoomBox.top = (room - _this.zoomBox.height) / 2 + view.getPageYOffset() - 10;\n  };\n  // Zoom -- zooms out the current image if any an zooms in the nex or previous\n  var zoomNext = function zoomNext(direction) {\n    var zoomByIndex = function zoomByIndex(idx) {\n      return event.trigger(event.IMG_ZOOM_IN, _this.entries[idx].id);\n    };\n    var index = 0;\n    if (_this.isZoomIn) {\n      // Get index of current image.\n      index = _this.entries.findIndex(function (entry) {\n        return entry.id === _this.zoomId;\n      });\n      // Zoom outs current.\n      event.trigger(event.IMG_ZOOM_OUT, _this.zoomId);\n      // get the index to be zoomed\n      index = direction === NEXT ? ++index : direction === PREV ? --index : 0;\n\n      if (index >= 0 && index < _this.entries.length) {\n        // zoomin the next image when the zoomouttransition finishes.\n        _this.one(event.TRANSITION_END, function () {\n          zoomByIndex(index);\n        });\n      }\n      // If no image is zoomed, zooms the first one.\n    } else if (direction === NEXT) zoomByIndex(index);\n  };\n  // Zoom -- toggling css and keeping state\n  var handleZoom = function handleZoom(type, id) {\n    id = id || _this.zoomId;\n    if (!id) return false;\n\n    var box = _this.entries.find(function (entry) {\n      return entry.id === id;\n    });\n\n    switch (type) {\n      case IN:\n        _this.zoomId = id;\n        _this.isZoomIn = true;\n        _this.showModal = true;\n        box.toFront = true;\n        box.zoomIn = true;\n        return true;\n      case OUT:\n        // this.zoomId = null\n        _this.isZoomIn = false;\n        _this.showModal = false;\n        box.zoomIn = false;\n        return true;\n      case END:\n        if (!_this.isZoomIn) {\n          box.toFront = false;\n          _this.zoomId = null;\n        }\n        return true;\n      default:\n        return console.error('Zoom types are: \"IN\", \"OUT\", \"END\".');\n    }\n  };\n\n  // Zoom -- dynamic style\n  var createZoomStyle = function createZoomStyle() {\n    // A styleSheet for the dynamic styles.\n    _this.styleSheet = createStyleSheet({ id: 'this-styles' });\n    // Dynamic css rule for the zoom box.\n    _this.zoomCSSRule = addCSSRule('.zoomin {}', _this.styleSheet);\n  };\n\n  // Zoom -- Manual update zoom style box props: top, left, width, height.\n  var updateZoomStyle = function updateZoomStyle() {\n    for (var prop in _this.zoomBox) {\n      _this.zoomCSSRule.style.setProperty(prop, _this.zoomBox[prop] + 'px', 'important');\n    }\n  };\n\n  // Zoom -- disable the zoom in small devices.\n  var ableToZoom = function ableToZoom() {\n    return (_this.isZoomEnabled = _this.width) > 663;\n  };\n}\n\n// Layout -- images using justifiedLayout\nGalleryStore.prototype.computeBoxesLayout = function () {\n  var geometry = justifiedLayout(this.ratios, {\n    containerWidth: this.width,\n    fullWidthBreakoutRowCadence: this.fullWidthCadence\n  });\n  this.entries = this.entries.map(function (entry, idx) {\n    return _extends({}, entry, geometry.boxes[idx], { idx: idx, zoomIn: false, toFront: false });\n  });\n\n  this.height = geometry.containerHeight;\n};\nmodule.exports = exports['default'];//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports['default'] = PortfolioStore;\nvar GalleryStore = __webpack_require__(18);\nvar inherits = __webpack_require__(7);\n\nfunction PortfolioStore(dispatcher) {\n  GalleryStore.call(this, dispatcher);\n}\n\ninherits(PortfolioStore, GalleryStore);\n\nPortfolioStore.prototype.computeBoxesLayout = function () {\n  // console.log(this.ratios, ' - ', this.width)\n  this.ratios = this.entries.length === 5 && this.width >= 1055 ? [1.33, 1.33, 1.21, 1.21, 1.21] : [1.33, 1.33, 1.33, 1.33, 1.33];\n\n  this.fullWidthCadence = this.entries.length === 5 && this.width > 663 && this.width <= 875 ? 2 : false;\n\n  PortfolioStore.super_.prototype.computeBoxesLayout.call(this);\n};\nmodule.exports = exports['default'];//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvam9yZ2UvZGV2L2dhbGwvc3JjL3N0b3Jlcy9wb3J0Zm9saW8tc3RvcmUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgR2FsbGVyeVN0b3JlID0gcmVxdWlyZSgnLi9nYWxsZXJ5LXN0b3JlLmpzJylcbmNvbnN0IGluaGVyaXRzID0gcmVxdWlyZSgnLi4vbGliL2luaGVyaXRzJylcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gUG9ydGZvbGlvU3RvcmUgKGRpc3BhdGNoZXIpIHtcbiAgR2FsbGVyeVN0b3JlLmNhbGwodGhpcywgZGlzcGF0Y2hlcilcbn1cblxuaW5oZXJpdHMoUG9ydGZvbGlvU3RvcmUsIEdhbGxlcnlTdG9yZSlcblxuUG9ydGZvbGlvU3RvcmUucHJvdG90eXBlLmNvbXB1dGVCb3hlc0xheW91dCA9IGZ1bmN0aW9uICgpIHtcbiAgLy8gY29uc29sZS5sb2codGhpcy5yYXRpb3MsICcgLSAnLCB0aGlzLndpZHRoKVxuICB0aGlzLnJhdGlvcyA9IHRoaXMuZW50cmllcy5sZW5ndGggPT09IDUgJiYgdGhpcy53aWR0aCA+PSAxMDU1XG4gICAgPyBbMS4zMywgMS4zMywgMS4yMSwgMS4yMSwgMS4yMV1cbiAgICA6IFsxLjMzLCAxLjMzLCAxLjMzLCAxLjMzLCAxLjMzXVxuXG4gIHRoaXMuZnVsbFdpZHRoQ2FkZW5jZSA9IHRoaXMuZW50cmllcy5sZW5ndGggPT09IDUgJiYgdGhpcy53aWR0aCA+IDY2MyAmJiB0aGlzLndpZHRoIDw9IDg3NVxuICAgID8gMlxuICAgIDogZmFsc2VcblxuICBQb3J0Zm9saW9TdG9yZS5zdXBlcl8ucHJvdG90eXBlLmNvbXB1dGVCb3hlc0xheW91dC5jYWxsKHRoaXMpXG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9zcmMvc3RvcmVzL3BvcnRmb2xpby1zdG9yZS5qcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFHQTtBQUhBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFHQTtBQUNBO0FBR0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 20 */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvam9yZ2UvZGV2L2dhbGwvc3JjL2Nzcy9tYWluLmNzcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyByZW1vdmVkIGJ5IGV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL2Nzcy9tYWluLmNzc1xuLy8gbW9kdWxlIGlkID0gMjBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 21 */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvam9yZ2UvZGV2L2dhbGwvc3JjL21vZHVsZXMvYm94L2JveC5jc3MiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9tb2R1bGVzL2JveC9ib3guY3NzXG4vLyBtb2R1bGUgaWQgPSAyMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 22 */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvam9yZ2UvZGV2L2dhbGwvc3JjL21vZHVsZXMvY29udGFpbmVyL2NvbnRhaW5lci5jc3MiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gcmVtb3ZlZCBieSBleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9tb2R1bGVzL2NvbnRhaW5lci9jb250YWluZXIuY3NzXG4vLyBtb2R1bGUgaWQgPSAyMlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 23 */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvam9yZ2UvZGV2L2dhbGwvc3JjL21vZHVsZXMvZ2FsbGVyaWVzLW1lbnUvZ2FsbGVyaWVzLW1lbnUuY3NzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvbW9kdWxlcy9nYWxsZXJpZXMtbWVudS9nYWxsZXJpZXMtbWVudS5jc3Ncbi8vIG1vZHVsZSBpZCA9IDIzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 24 */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvam9yZ2UvZGV2L2dhbGwvc3JjL21vZHVsZXMvaW1nLWNvbXAvaW1nLWNvbXAuY3NzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvbW9kdWxlcy9pbWctY29tcC9pbWctY29tcC5jc3Ncbi8vIG1vZHVsZSBpZCA9IDI0XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 25 */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvam9yZ2UvZGV2L2dhbGwvc3JjL21vZHVsZXMvanVzdGlmaWVkLWdhbGxlcnkvanVzdGlmaWVkLWdhbGxlcnkuY3NzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvbW9kdWxlcy9qdXN0aWZpZWQtZ2FsbGVyeS9qdXN0aWZpZWQtZ2FsbGVyeS5jc3Ncbi8vIG1vZHVsZSBpZCA9IDI1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 26 */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvam9yZ2UvZGV2L2dhbGwvc3JjL21vZHVsZXMvbW9kYWwvbW9kYWwuY3NzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHJlbW92ZWQgYnkgZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvbW9kdWxlcy9tb2RhbC9tb2RhbC5jc3Ncbi8vIG1vZHVsZSBpZCA9IDI2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUEiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 27 */
/***/ (function(module, exports) {

eval("module.exports = {\n\t\"first\": \"Popular_Pensiones_2007\",\n\t\"path\": \"/assets/galleries/\",\n\t\"galleries\": [\n\t\t{\n\t\t\t\"dir\": \"Muebles_Conceptuales\",\n\t\t\t\"name\": \"Muebles Conceptuales\"\n\t\t},\n\t\t{\n\t\t\t\"dir\": \"Popular_Pensiones_2004\",\n\t\t\t\"name\": \"Popular Pensiones 2004\"\n\t\t},\n\t\t{\n\t\t\t\"dir\": \"Popular_Pensiones_2007\",\n\t\t\t\"name\": \"Popular Pensiones 2007\"\n\t\t}\n\t],\n\t\"width\": 1060,\n\t\"zoomWidth\": 768,\n\t\"zoomHeight\": 576,\n\t\"fullWidthCadence\": false,\n\t\"route\": \"Proyecto\",\n\t\"lang\": \"en\"\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvam9yZ2UvZGV2L2dhbGwvZGF0YS9jb25maWcuanNvbiJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHtcblx0XCJmaXJzdFwiOiBcIlBvcHVsYXJfUGVuc2lvbmVzXzIwMDdcIixcblx0XCJwYXRoXCI6IFwiL2Fzc2V0cy9nYWxsZXJpZXMvXCIsXG5cdFwiZ2FsbGVyaWVzXCI6IFtcblx0XHR7XG5cdFx0XHRcImRpclwiOiBcIk11ZWJsZXNfQ29uY2VwdHVhbGVzXCIsXG5cdFx0XHRcIm5hbWVcIjogXCJNdWVibGVzIENvbmNlcHR1YWxlc1wiXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRcImRpclwiOiBcIlBvcHVsYXJfUGVuc2lvbmVzXzIwMDRcIixcblx0XHRcdFwibmFtZVwiOiBcIlBvcHVsYXIgUGVuc2lvbmVzIDIwMDRcIlxuXHRcdH0sXG5cdFx0e1xuXHRcdFx0XCJkaXJcIjogXCJQb3B1bGFyX1BlbnNpb25lc18yMDA3XCIsXG5cdFx0XHRcIm5hbWVcIjogXCJQb3B1bGFyIFBlbnNpb25lcyAyMDA3XCJcblx0XHR9XG5cdF0sXG5cdFwid2lkdGhcIjogMTA2MCxcblx0XCJ6b29tV2lkdGhcIjogNzY4LFxuXHRcInpvb21IZWlnaHRcIjogNTc2LFxuXHRcImZ1bGxXaWR0aENhZGVuY2VcIjogZmFsc2UsXG5cdFwicm91dGVcIjogXCJQcm95ZWN0b1wiLFxuXHRcImxhbmdcIjogXCJlblwiXG59O1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vZGF0YS9jb25maWcuanNvblxuLy8gbW9kdWxlIGlkID0gMjdcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("// Copyright 2016 Yahoo Inc.\n// Licensed under the terms of the MIT license. Please see LICENSE file in the project root for terms.\n\n\n\nvar merge = __webpack_require__(3),\n    Row = __webpack_require__(29),\n    layoutConfig = {},\n    layoutData = {},\n    currentRow = false;\n\n/**\n* Takes in a bunch of box data and config. Returns\n* geometry to lay them out in a justified view.\n*\n* @method covertSizesToAspectRatios\n* @param sizes {Array} Array of objects with widths and heights\n* @return {Array} A list of aspect ratios\n**/\nmodule.exports = function (input) {\n\tvar config = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n\t// Defaults\n\tvar defaults = {\n\t\tcontainerWidth: 1060,\n\t\tcontainerPadding: 10,\n\t\tboxSpacing: 10,\n\t\ttargetRowHeight: 320,\n\t\ttargetRowHeightTolerance: 0.25,\n\t\tmaxNumRows: Number.POSITIVE_INFINITY,\n\t\tforceAspectRatio: false,\n\t\tshowWidows: true,\n\t\tfullWidthBreakoutRowCadence: false\n\t};\n\n\t// Merge defaults and config passed in\n\tlayoutConfig = merge(defaults, config);\n\n\t// Sort out padding and spacing values\n\tvar containerPadding = {};\n\tvar boxSpacing = {};\n\n\tcontainerPadding.top = !isNaN(parseFloat(layoutConfig.containerPadding.top)) ? layoutConfig.containerPadding.top : layoutConfig.containerPadding;\n\tcontainerPadding.right = !isNaN(parseFloat(layoutConfig.containerPadding.right)) ? layoutConfig.containerPadding.right : layoutConfig.containerPadding;\n\tcontainerPadding.bottom = !isNaN(parseFloat(layoutConfig.containerPadding.bottom)) ? layoutConfig.containerPadding.bottom : layoutConfig.containerPadding;\n\tcontainerPadding.left = !isNaN(parseFloat(layoutConfig.containerPadding.left)) ? layoutConfig.containerPadding.left : layoutConfig.containerPadding;\n\tboxSpacing.horizontal = !isNaN(parseFloat(layoutConfig.boxSpacing.horizontal)) ? layoutConfig.boxSpacing.horizontal : layoutConfig.boxSpacing;\n\tboxSpacing.vertical = !isNaN(parseFloat(layoutConfig.boxSpacing.vertical)) ? layoutConfig.boxSpacing.vertical : layoutConfig.boxSpacing;\n\n\tlayoutConfig.containerPadding = containerPadding;\n\tlayoutConfig.boxSpacing = boxSpacing;\n\n\t// Local\n\tlayoutData._layoutItems = [];\n\tlayoutData._awakeItems = [];\n\tlayoutData._inViewportItems = [];\n\tlayoutData._leadingOrphans = [];\n\tlayoutData._trailingOrphans = [];\n\tlayoutData._containerHeight = layoutConfig.containerPadding.top;\n\tlayoutData._rows = [];\n\tlayoutData._orphans = [];\n\tlayoutConfig._widowCount = 0;\n\n\t// Convert widths and heights to aspect ratios if we need to\n\treturn computeLayout(input.map(function (item) {\n\t\tif (item.width && item.height) {\n\t\t\treturn { aspectRatio: item.width / item.height };\n\t\t} else {\n\t\t\treturn { aspectRatio: item };\n\t\t}\n\t}));\n};\n\n/**\n* Calculate the current layout for all items in the list that require layout.\n* \"Layout\" means geometry: position within container and size\n*\n* @method computeLayout\n* @param itemLayoutData {Array} Array of items to lay out, with data required to lay out each item\n* @return {Object} The newly-calculated layout, containing the new container height, and lists of layout items\n*/\nfunction computeLayout(itemLayoutData) {\n\n\tvar laidOutItems = [],\n\t    itemAdded,\n\t    currentRow,\n\t    nextToLastRowHeight;\n\n\t// Apply forced aspect ratio if specified, and set a flag.\n\tif (layoutConfig.forceAspectRatio) {\n\t\titemLayoutData.forEach(function (itemData) {\n\t\t\titemData.forcedAspectRatio = true;\n\t\t\titemData.aspectRatio = layoutConfig.forceAspectRatio;\n\t\t});\n\t}\n\n\t// Loop through the items\n\titemLayoutData.some(function (itemData, i) {\n\n\t\tif (isNaN(itemData.aspectRatio)) {\n\t\t\tthrow new Error(\"Item \" + i + \" has an invalid aspect ratio\");\n\t\t}\n\n\t\t// If not currently building up a row, make a new one.\n\t\tif (!currentRow) {\n\t\t\tcurrentRow = createNewRow();\n\t\t}\n\n\t\t// Attempt to add item to the current row.\n\t\titemAdded = currentRow.addItem(itemData);\n\n\t\tif (currentRow.isLayoutComplete()) {\n\n\t\t\t// Row is filled; add it and start a new one\n\t\t\tlaidOutItems = laidOutItems.concat(addRow(currentRow));\n\n\t\t\tif (layoutData._rows.length >= layoutConfig.maxNumRows) {\n\t\t\t\tcurrentRow = null;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tcurrentRow = createNewRow();\n\n\t\t\t// Item was rejected; add it to its own row\n\t\t\tif (!itemAdded) {\n\n\t\t\t\titemAdded = currentRow.addItem(itemData);\n\n\t\t\t\tif (currentRow.isLayoutComplete()) {\n\n\t\t\t\t\t// If the rejected item fills a row on its own, add the row and start another new one\n\t\t\t\t\tlaidOutItems = laidOutItems.concat(addRow(currentRow));\n\t\t\t\t\tif (layoutData._rows.length >= layoutConfig.maxNumRows) {\n\t\t\t\t\t\tcurrentRow = null;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tcurrentRow = createNewRow();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\t// Handle any leftover content (orphans) depending on where they lie\n\t// in this layout update, and in the total content set.\n\tif (currentRow && currentRow.getItems().length && layoutConfig.showWidows) {\n\n\t\t// Last page of all content or orphan suppression is suppressed; lay out orphans.\n\t\tif (layoutData._rows.length) {\n\n\t\t\t// Only Match previous row's height if it exists and it isn't a breakout row\n\t\t\tif (layoutData._rows[layoutData._rows.length - 1].isBreakoutRow) {\n\t\t\t\tnextToLastRowHeight = layoutData._rows[layoutData._rows.length - 1].targetRowHeight;\n\t\t\t} else {\n\t\t\t\tnextToLastRowHeight = layoutData._rows[layoutData._rows.length - 1].height;\n\t\t\t}\n\n\t\t\tcurrentRow.forceComplete(false, nextToLastRowHeight);\n\t\t} else {\n\n\t\t\t// ...else use target height if there is no other row height to reference.\n\t\t\tcurrentRow.forceComplete(false);\n\t\t}\n\n\t\tlaidOutItems = laidOutItems.concat(addRow(currentRow));\n\t\tlayoutConfig._widowCount = currentRow.getItems().length;\n\t}\n\n\t// We need to clean up the bottom container padding\n\t// First remove the height added for box spacing\n\tlayoutData._containerHeight = layoutData._containerHeight - layoutConfig.boxSpacing.vertical;\n\t// Then add our bottom container padding\n\tlayoutData._containerHeight = layoutData._containerHeight + layoutConfig.containerPadding.bottom;\n\n\treturn {\n\t\tcontainerHeight: layoutData._containerHeight,\n\t\twidowCount: layoutConfig._widowCount,\n\t\tboxes: layoutData._layoutItems\n\t};\n}\n\n/**\n* Create a new, empty row.\n*\n* @method createNewRow\n* @return A new, empty row of the type specified by this layout.\n*/\nfunction createNewRow() {\n\n\t// Work out if this is a full width breakout row\n\tif (layoutConfig.fullWidthBreakoutRowCadence !== false) {\n\t\tif ((layoutData._rows.length + 1) % layoutConfig.fullWidthBreakoutRowCadence === 0) {\n\t\t\tvar isBreakoutRow = true;\n\t\t}\n\t}\n\n\treturn new Row({\n\t\ttop: layoutData._containerHeight,\n\t\tleft: layoutConfig.containerPadding.left,\n\t\twidth: layoutConfig.containerWidth - layoutConfig.containerPadding.left - layoutConfig.containerPadding.right,\n\t\tspacing: layoutConfig.boxSpacing.horizontal,\n\t\ttargetRowHeight: layoutConfig.targetRowHeight,\n\t\ttargetRowHeightTolerance: layoutConfig.targetRowHeightTolerance,\n\t\tedgeCaseMinRowHeight: 0.5 * layoutConfig.targetRowHeight,\n\t\tedgeCaseMaxRowHeight: 2 * layoutConfig.targetRowHeight,\n\t\trightToLeft: false,\n\t\tisBreakoutRow: isBreakoutRow\n\t});\n}\n\n/**\n * Add a completed row to the layout.\n * Note: the row must have already been completed.\n *\n * @method addRow\n * @param row {Row} The row to add.\n * @return {Array} Each item added to the row.\n */\nfunction addRow(row) {\n\n\tlayoutData._rows.push(row);\n\tlayoutData._layoutItems = layoutData._layoutItems.concat(row.getItems());\n\n\t// Increment the container height\n\tlayoutData._containerHeight += row.height + layoutConfig.boxSpacing.vertical;\n\n\treturn row.items;\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// Copyright 2016 Yahoo Inc.\n// Licensed under the terms of the MIT license. Please see LICENSE file in the project root for terms.\n\nvar merge = __webpack_require__(3);\n\n/**\n* Row\n* Wrapper for each row in a justified layout.\n* Stores relevant values and provides methods for calculating layout of individual rows.\n*\n* @param {Object} layoutConfig - The same as that passed\n* @param {Object} Initialization paramters. The following are all required:\n* @param params.top {Number} Top of row, relative to container\n* @param params.left {Number} Left side of row relative to container (equal to container left padding)\n* @param params.width {Number} Width of row, not including container padding\n* @param params.spacing {Number} Horizontal spacing between items\n* @param params.targetRowHeight {Number} Layout algorithm will aim for this row height\n* @param params.targetRowHeightTolerance {Number} Row heights may vary +/- (`targetRowHeight` x `targetRowHeightTolerance`)\n* @param params.edgeCaseMinRowHeight {Number} Absolute minimum row height for edge cases that cannot be resolved within tolerance.\n* @param params.edgeCaseMaxRowHeight {Number} Absolute maximum row height for edge cases that cannot be resolved within tolerance.\n* @param params.isBreakoutRow {Boolean} Is this row in particular one of those breakout rows? Always false if it's not that kind of photo list\n* @constructor\n*/\nvar Row = module.exports = function (params) {\n\n\t// Top of row, relative to container\n\tthis.top = params.top;\n\n\t// Left side of row relative to container (equal to container left padding)\n\tthis.left = params.left;\n\n\t// Width of row, not including container padding\n\tthis.width = params.width;\n\n\t// Horizontal spacing between items\n\tthis.spacing = params.spacing;\n\n\t// Row height calculation values\n\tthis.targetRowHeight = params.targetRowHeight;\n\tthis.targetRowHeightTolerance = params.targetRowHeightTolerance;\n\tthis.minAspectRatio = this.width / params.targetRowHeight * (1 - params.targetRowHeightTolerance);\n\tthis.maxAspectRatio = this.width / params.targetRowHeight * (1 + params.targetRowHeightTolerance);\n\n\t// Edge case row height minimum/maximum\n\tthis.edgeCaseMinRowHeight = params.edgeCaseMinRowHeight;\n\tthis.edgeCaseMaxRowHeight = params.edgeCaseMaxRowHeight;\n\n\t// Layout direction\n\tthis.rightToLeft = params.rightToLeft;\n\n\t// Full width breakout rows\n\tthis.isBreakoutRow = params.isBreakoutRow;\n\n\t// Store layout data for each item in row\n\tthis.items = [];\n\n\t// Height remains at 0 until it's been calculated\n\tthis.height = 0;\n};\n\nRow.prototype = {\n\n\t/**\n * Attempt to add a single item to the row.\n * This is the heart of the justified algorithm.\n * This method is direction-agnostic; it deals only with sizes, not positions.\n *\n * If the item fits in the row, without pushing row height beyond min/max tolerance,\n * the item is added and the method returns true.\n *\n * If the item leaves row height too high, there may be room to scale it down and add another item.\n * In this case, the item is added and the method returns true, but the row is incomplete.\n *\n * If the item leaves row height too short, there are too many items to fit within tolerance.\n * The method will either accept or reject the new item, favoring the resulting row height closest to within tolerance.\n * If the item is rejected, left/right padding will be required to fit the row height within tolerance;\n * if the item is accepted, top/bottom cropping will be required to fit the row height within tolerance.\n *\n * @method addItem\n * @param itemData {Object} Item layout data, containing item aspect ratio.\n * @return {Boolean} True if successfully added; false if rejected.\n */\n\taddItem: function addItem(itemData) {\n\n\t\tvar newItems = this.items.concat(itemData),\n\n\t\t// Calculate aspect ratios for items only; exclude spacing\n\t\trowWidthWithoutSpacing = this.width - (newItems.length - 1) * this.spacing,\n\t\t    newAspectRatio = newItems.reduce(function (sum, item) {\n\t\t\treturn sum + item.aspectRatio;\n\t\t}, 0),\n\t\t    targetAspectRatio = rowWidthWithoutSpacing / this.targetRowHeight,\n\t\t    previousRowWidthWithoutSpacing,\n\t\t    previousAspectRatio,\n\t\t    previousTargetAspectRatio;\n\n\t\t// Handle big full-width breakout photos if we're doing them\n\t\tif (this.isBreakoutRow) {\n\t\t\t// Only do it if there's no other items in this row\n\t\t\tif (this.items.length === 0) {\n\t\t\t\t// Only go full width if this photo is a square or landscape\n\t\t\t\tif (itemData.aspectRatio >= 1) {\n\t\t\t\t\t// Close out the row with a full width photo\n\t\t\t\t\tthis.items.push(itemData);\n\t\t\t\t\tthis.completeLayout(rowWidthWithoutSpacing / itemData.aspectRatio);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (newAspectRatio < this.minAspectRatio) {\n\n\t\t\t// New aspect ratio is too narrow / scaled row height is too tall.\n\t\t\t// Accept this item and leave row open for more items.\n\n\t\t\tthis.items.push(merge(itemData));\n\t\t\treturn true;\n\t\t} else if (newAspectRatio > this.maxAspectRatio) {\n\n\t\t\t// New aspect ratio is too wide / scaled row height will be too short.\n\t\t\t// Accept item if the resulting aspect ratio is closer to target than it would be without the item.\n\t\t\t// NOTE: Any row that falls into this block will require cropping/padding on individual items.\n\n\t\t\tif (this.items.length === 0) {\n\n\t\t\t\t// When there are no existing items, force acceptance of the new item and complete the layout.\n\t\t\t\t// This is the pano special case.\n\t\t\t\tthis.items.push(merge(itemData));\n\t\t\t\tthis.completeLayout(rowWidthWithoutSpacing / newAspectRatio);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// Calculate width/aspect ratio for row before adding new item\n\t\t\tpreviousRowWidthWithoutSpacing = this.width - (this.items.length - 1) * this.spacing;\n\t\t\tpreviousAspectRatio = this.items.reduce(function (sum, item) {\n\t\t\t\treturn sum + item.aspectRatio;\n\t\t\t}, 0);\n\t\t\tpreviousTargetAspectRatio = previousRowWidthWithoutSpacing / this.targetRowHeight;\n\n\t\t\tif (Math.abs(newAspectRatio - targetAspectRatio) > Math.abs(previousAspectRatio - previousTargetAspectRatio)) {\n\n\t\t\t\t// Row with new item is us farther away from target than row without; complete layout and reject item.\n\t\t\t\tthis.completeLayout(previousRowWidthWithoutSpacing / previousAspectRatio);\n\t\t\t\treturn false;\n\t\t\t} else {\n\n\t\t\t\t// Row with new item is us closer to target than row without;\n\t\t\t\t// accept the new item and complete the row layout.\n\t\t\t\tthis.items.push(merge(itemData));\n\t\t\t\tthis.completeLayout(rowWidthWithoutSpacing / newAspectRatio);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else {\n\n\t\t\t// New aspect ratio / scaled row height is within tolerance;\n\t\t\t// accept the new item and complete the row layout.\n\t\t\tthis.items.push(merge(itemData));\n\t\t\tthis.completeLayout(rowWidthWithoutSpacing / newAspectRatio);\n\t\t\treturn true;\n\t\t}\n\t},\n\n\t/**\n * Check if a row has completed its layout.\n *\n * @method isLayoutComplete\n * @return {Boolean} True if complete; false if not.\n */\n\tisLayoutComplete: function isLayoutComplete() {\n\t\treturn this.height > 0;\n\t},\n\n\t/**\n * Set row height and compute item geometry from that height.\n * Will justify items within the row unless instructed not to.\n *\n * @method completeLayout\n * @param newHeight {Number} Set row height to this value.\n * @param justify Apply error correction to ensure photos exactly fill the row. Defaults to `true`.\n */\n\tcompleteLayout: function completeLayout(newHeight, justify) {\n\n\t\tvar itemWidthSum = this.left,\n\t\t    rowWidthWithoutSpacing = this.width - (this.items.length - 1) * this.spacing,\n\t\t    clampedToNativeRatio,\n\t\t    roundedHeight,\n\t\t    clampedHeight,\n\t\t    errorWidthPerItem,\n\t\t    roundedCumulativeErrors,\n\t\t    singleItemGeometry,\n\t\t    self = this;\n\n\t\t// Justify unless explicitly specified otherwise.\n\t\tif (typeof justify === 'undefined') {\n\t\t\tjustify = true;\n\t\t}\n\n\t\t// Don't set fractional values in the layout.\n\t\troundedHeight = Math.round(newHeight);\n\n\t\t// Clamp row height to edge case minimum/maximum.\n\t\tclampedHeight = Math.max(this.edgeCaseMinRowHeight, Math.min(roundedHeight, this.edgeCaseMaxRowHeight));\n\n\t\tif (roundedHeight !== clampedHeight) {\n\n\t\t\t// If row height was clamped, the resulting row/item aspect ratio will be off,\n\t\t\t// so force it to fit the width (recalculate aspectRatio to match clamped height).\n\t\t\t// NOTE: this will result in cropping/padding commensurate to the amount of clamping.\n\t\t\tthis.height = clampedHeight;\n\t\t\tclampedToNativeRatio = rowWidthWithoutSpacing / clampedHeight / (rowWidthWithoutSpacing / roundedHeight);\n\t\t} else {\n\n\t\t\t// If not clamped, leave ratio at 1.0.\n\t\t\tthis.height = roundedHeight;\n\t\t\tclampedToNativeRatio = 1.0;\n\t\t}\n\n\t\t// Compute item geometry based on newHeight.\n\t\tthis.items.forEach(function (item, i) {\n\n\t\t\titem.top = self.top;\n\t\t\titem.width = Math.round(item.aspectRatio * self.height * clampedToNativeRatio);\n\t\t\titem.height = self.height;\n\n\t\t\t// Left-to-right.\n\t\t\t// TODO right to left\n\t\t\t// item.left = self.width - itemWidthSum - item.width;\n\t\t\titem.left = itemWidthSum;\n\n\t\t\t// Incrememnt width.\n\t\t\titemWidthSum += item.width + self.spacing;\n\t\t});\n\n\t\t// If specified, ensure items fill row and distribute error\n\t\t// caused by rounding width and height across all items.\n\t\tif (justify) {\n\n\t\t\t// TODO Right to left\n\t\t\t// Left-to-right increments itemWidthSum differently;\n\t\t\t// account for that before distributing error.\n\t\t\t// if (!this.rightToLeft) {\n\t\t\titemWidthSum -= this.spacing + this.left;\n\n\t\t\terrorWidthPerItem = (itemWidthSum - this.width) / this.items.length;\n\t\t\troundedCumulativeErrors = this.items.map(function (item, i) {\n\t\t\t\treturn Math.round((i + 1) * errorWidthPerItem);\n\t\t\t});\n\n\t\t\tif (this.items.length === 1) {\n\n\t\t\t\t// For rows with only one item, adjust item width to fill row.\n\t\t\t\tsingleItemGeometry = this.items[0];\n\t\t\t\tsingleItemGeometry.width -= Math.round(errorWidthPerItem);\n\n\t\t\t\t// In right-to-left layouts, shift item to account for width change.\n\t\t\t\t// TODO Right to left\n\t\t\t\t// if (this.rightToLeft) {\n\t\t\t\t// \tsingleItemGeometry.left += Math.round(errorWidthPerItem);\n\t\t\t\t// }\n\t\t\t} else {\n\n\t\t\t\t\t// For rows with multiple items, adjust item width and shift items to fill the row,\n\t\t\t\t\t// while maintaining equal spacing between items in the row.\n\t\t\t\t\tthis.items.forEach(function (item, i) {\n\t\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t\titem.left -= roundedCumulativeErrors[i - 1];\n\t\t\t\t\t\t\titem.width -= roundedCumulativeErrors[i] - roundedCumulativeErrors[i - 1];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\titem.width -= roundedCumulativeErrors[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t}\n\t},\n\n\t/**\n * Force completion of row layout with current items.\n *\n * @method forceComplete\n * @param fitToWidth {Boolean} Stretch current items to fill the row width.\n *                             This will likely result in padding.\n * @param fitToWidth {Number}\n */\n\tforceComplete: function forceComplete(fitToWidth, rowHeight) {\n\n\t\tvar rowWidthWithoutSpacing = this.width - (this.items.length - 1) * this.spacing,\n\t\t    currentAspectRatio = this.items.reduce(function (sum, item) {\n\t\t\treturn sum + item.aspectRatio;\n\t\t}, 0);\n\n\t\t// TODO Handle fitting to width\n\n\t\tif (typeof rowHeight === 'number') {\n\n\t\t\tthis.completeLayout(rowHeight, false);\n\t\t} else {\n\n\t\t\t// Complete using target row height.\n\t\t\tthis.completeLayout(this.targetRowHeight, false);\n\t\t}\n\t},\n\n\t/**\n * Return layout data for items within row.\n * Note: returns actual list, not a copy.\n *\n * @method getItems\n * @return Layout data for items within row.\n */\n\tgetItems: function getItems() {\n\t\treturn this.items;\n\t}\n\n};//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

eval("var riot = __webpack_require__(0);\n\n\nriot.tag2('box', '<a href=\"{opts.zoom_enabled ? \\'#\\'+id : \\'\\'}\" onclick=\"{click}\" class=\"{opts.zoom_enabled ? \\'zoom-cursor\\' : \\'\\'}\"> <img-comp runup=\"{img_comp.runup}\" back=\"{opts.path}/{img_comp.back}\" fore=\"{opts.path}/{img_comp.fore}\"></img-comp></a>', '', '', function(opts) {\nvar _this = this;\n\nvar throttle = __webpack_require__(2);\nvar event = opts.dispatcher;\n\nthis.click = function (ev) {\n  event.trigger(event.IMAGE_CLICK, _this.id);\n};\n});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvam9yZ2UvZGV2L2dhbGwvc3JjL21vZHVsZXMvYm94L2JveC50YWcucHVnIl0sInNvdXJjZXNDb250ZW50IjpbInZhciByaW90ID0gcmVxdWlyZShcInJpb3RcIik7XG5cblxucmlvdC50YWcyKCdib3gnLCAnPGEgaHJlZj1cIntvcHRzLnpvb21fZW5hYmxlZCA/IFxcJyNcXCcraWQgOiBcXCdcXCd9XCIgb25jbGljaz1cIntjbGlja31cIiBjbGFzcz1cIntvcHRzLnpvb21fZW5hYmxlZCA/IFxcJ3pvb20tY3Vyc29yXFwnIDogXFwnXFwnfVwiPiA8aW1nLWNvbXAgcnVudXA9XCJ7aW1nX2NvbXAucnVudXB9XCIgYmFjaz1cIntvcHRzLnBhdGh9L3tpbWdfY29tcC5iYWNrfVwiIGZvcmU9XCJ7b3B0cy5wYXRofS97aW1nX2NvbXAuZm9yZX1cIj48L2ltZy1jb21wPjwvYT4nLCAnJywgJycsIGZ1bmN0aW9uKG9wdHMpIHtcbnZhciBfdGhpcyA9IHRoaXM7XG5cbnZhciB0aHJvdHRsZSA9IHJlcXVpcmUoJy4uLy4uL2xpYi90aHJvdHRsZScpO1xudmFyIGV2ZW50ID0gb3B0cy5kaXNwYXRjaGVyO1xuXG50aGlzLmNsaWNrID0gZnVuY3Rpb24gKGV2KSB7XG4gIGV2ZW50LnRyaWdnZXIoZXZlbnQuSU1BR0VfQ0xJQ0ssIF90aGlzLmlkKTtcbn07XG59KTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9tb2R1bGVzL2JveC9ib3gudGFnLnB1Z1xuLy8gbW9kdWxlIGlkID0gMzBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

eval("var riot = __webpack_require__(0);\n\n\nriot.tag2('container', '<div data-is=\"box\" each=\"{opts.entries}\" id=\"{id}\" riot-style=\"width: {width}px; height: {height}px; top: {top}px; left: {left}px\" path=\"{parent.opts.path}\" dispatcher=\"{parent.opts.dispatcher}\" zoom_enabled=\"{parent.opts.zoom_enabled}\" class=\" {toFront ? \\'tofront\\' : \\'\\'} {zoomIn ? \\'zoomin\\' : \\'\\'}\"></div>', '', '', function(opts) {\n});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvam9yZ2UvZGV2L2dhbGwvc3JjL21vZHVsZXMvY29udGFpbmVyL2NvbnRhaW5lci50YWcucHVnIl0sInNvdXJjZXNDb250ZW50IjpbInZhciByaW90ID0gcmVxdWlyZShcInJpb3RcIik7XG5cblxucmlvdC50YWcyKCdjb250YWluZXInLCAnPGRpdiBkYXRhLWlzPVwiYm94XCIgZWFjaD1cIntvcHRzLmVudHJpZXN9XCIgaWQ9XCJ7aWR9XCIgcmlvdC1zdHlsZT1cIndpZHRoOiB7d2lkdGh9cHg7IGhlaWdodDoge2hlaWdodH1weDsgdG9wOiB7dG9wfXB4OyBsZWZ0OiB7bGVmdH1weFwiIHBhdGg9XCJ7cGFyZW50Lm9wdHMucGF0aH1cIiBkaXNwYXRjaGVyPVwie3BhcmVudC5vcHRzLmRpc3BhdGNoZXJ9XCIgem9vbV9lbmFibGVkPVwie3BhcmVudC5vcHRzLnpvb21fZW5hYmxlZH1cIiBjbGFzcz1cIiB7dG9Gcm9udCA/IFxcJ3RvZnJvbnRcXCcgOiBcXCdcXCd9IHt6b29tSW4gPyBcXCd6b29taW5cXCcgOiBcXCdcXCd9XCI+PC9kaXY+JywgJycsICcnLCBmdW5jdGlvbihvcHRzKSB7XG59KTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9tb2R1bGVzL2NvbnRhaW5lci9jb250YWluZXIudGFnLnB1Z1xuLy8gbW9kdWxlIGlkID0gMzFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

eval("var riot = __webpack_require__(0);\n\n\nriot.tag2('galleries-menu', '<ul> <li each=\"{opts.galleries}\"><a href=\"#{parent.opts.route}/{dir}\">{name}</a></li> </ul>', '', '', function(opts) {\n});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvam9yZ2UvZGV2L2dhbGwvc3JjL21vZHVsZXMvZ2FsbGVyaWVzLW1lbnUvZ2FsbGVyaWVzLW1lbnUudGFnLnB1ZyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcmlvdCA9IHJlcXVpcmUoXCJyaW90XCIpO1xuXG5cbnJpb3QudGFnMignZ2FsbGVyaWVzLW1lbnUnLCAnPHVsPiA8bGkgZWFjaD1cIntvcHRzLmdhbGxlcmllc31cIj48YSBocmVmPVwiI3twYXJlbnQub3B0cy5yb3V0ZX0ve2Rpcn1cIj57bmFtZX08L2E+PC9saT4gPC91bD4nLCAnJywgJycsIGZ1bmN0aW9uKG9wdHMpIHtcbn0pO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL21vZHVsZXMvZ2FsbGVyaWVzLW1lbnUvZ2FsbGVyaWVzLW1lbnUudGFnLnB1Z1xuLy8gbW9kdWxlIGlkID0gMzJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

eval("var riot = __webpack_require__(0);\n\n\nriot.tag2('img-comp', '<div class=\"image\"><img id=\"runup\" if=\"{!loaded}\" riot-src=\"{opts.runup}\" class=\"full blur\"> <div id=\"texture\" if=\"{!loaded}\" class=\"full tl\"></div><img id=\"back\" riot-src=\"{opts.back}\" class=\"fadein pos max border\"><img id=\"fore\" if=\"{opts.fore}\" riot-src=\"{opts.fore}\" class=\"fadein pos max\"> </div>', '', '', function(opts) {\nvar _this = this;\n\nthis.loaded = false;\nthis.back.addEventListener('animationend', function () {\n  _this.texture.classList.add('hide');\n  _this.runup.classList.add('hide');\n  _this.loaded = true;\n}, false);\n});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvam9yZ2UvZGV2L2dhbGwvc3JjL21vZHVsZXMvaW1nLWNvbXAvaW1nLWNvbXAudGFnLnB1ZyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcmlvdCA9IHJlcXVpcmUoXCJyaW90XCIpO1xuXG5cbnJpb3QudGFnMignaW1nLWNvbXAnLCAnPGRpdiBjbGFzcz1cImltYWdlXCI+PGltZyBpZD1cInJ1bnVwXCIgaWY9XCJ7IWxvYWRlZH1cIiByaW90LXNyYz1cIntvcHRzLnJ1bnVwfVwiIGNsYXNzPVwiZnVsbCBibHVyXCI+IDxkaXYgaWQ9XCJ0ZXh0dXJlXCIgaWY9XCJ7IWxvYWRlZH1cIiBjbGFzcz1cImZ1bGwgdGxcIj48L2Rpdj48aW1nIGlkPVwiYmFja1wiIHJpb3Qtc3JjPVwie29wdHMuYmFja31cIiBjbGFzcz1cImZhZGVpbiBwb3MgbWF4IGJvcmRlclwiPjxpbWcgaWQ9XCJmb3JlXCIgaWY9XCJ7b3B0cy5mb3JlfVwiIHJpb3Qtc3JjPVwie29wdHMuZm9yZX1cIiBjbGFzcz1cImZhZGVpbiBwb3MgbWF4XCI+IDwvZGl2PicsICcnLCAnJywgZnVuY3Rpb24ob3B0cykge1xudmFyIF90aGlzID0gdGhpcztcblxudGhpcy5sb2FkZWQgPSBmYWxzZTtcbnRoaXMuYmFjay5hZGRFdmVudExpc3RlbmVyKCdhbmltYXRpb25lbmQnLCBmdW5jdGlvbiAoKSB7XG4gIF90aGlzLnRleHR1cmUuY2xhc3NMaXN0LmFkZCgnaGlkZScpO1xuICBfdGhpcy5ydW51cC5jbGFzc0xpc3QuYWRkKCdoaWRlJyk7XG4gIF90aGlzLmxvYWRlZCA9IHRydWU7XG59LCBmYWxzZSk7XG59KTtcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9tb2R1bGVzL2ltZy1jb21wL2ltZy1jb21wLnRhZy5wdWdcbi8vIG1vZHVsZSBpZCA9IDMzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

eval("var riot = __webpack_require__(0);\n\n\nriot.tag2('justified-gallery', '<galleries-menu galleries=\"{store.config.galleries}\" route=\"{store.config.route}\"></galleries-menu> <div data-is=\"container\" riot-style=\"height: {store.height}px; width: {store.width}px;\" entries=\"{store.entries}\" path=\"{store.path}\" dispatcher=\"{store.dispatcher}\" zoom_enabled=\"{store.isZoomEnabled}\"></div> <div id=\"desciption\" riot-style=\"width: {store.width}px\"> <h3 class=\"header\">{store.name}</h3> <div data-is=\"raw\" html=\"{store.desc[store.config.lang]}\" class=\"body\"></div> </div> <modal is_modal=\"{store.showModal}\" zoom_id=\"{store.zoomId}\" dispatcher=\"{store.dispatcher}\"></modal>', '', '', function(opts) {\nvar _this = this;\n\nvar throttle = __webpack_require__(2);\nvar PREV = __webpack_require__(1).PREV;\nvar NEXT = __webpack_require__(1).NEXT;\nvar store = this.store = opts.store;\nvar event = store.dispatcher;\nvar keyHanlers = {\n  37: function _(e) {\n    return e.trigger(e.SWITCH_IMAGE, PREV);\n  },\n  39: function _(e) {\n    return e.trigger(e.SWITCH_IMAGE, NEXT);\n  },\n  27: function _(e) {\n    return e.trigger(e.IMG_ZOOM_OUT);\n  }\n};\nvar keyHandler = function keyHandler(code, event) {\n  return keyHanlers[code] && keyHanlers[code](event);\n};\n\nevent.trigger(event.GALLERY_INIT);\n\nstore.on(store.CHANGED_EVENT, function () {\n  return _this.update();\n});\n\nwindow.addEventListener('resize', throttle(function (ev) {\n  return event.trigger(event.WINDOW_RESIZE, ev);\n}, 200));\n\nwindow.addEventListener('keydown', function (ev) {\n  return keyHandler(ev.keyCode, event);\n}, false);\n});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvam9yZ2UvZGV2L2dhbGwvc3JjL21vZHVsZXMvanVzdGlmaWVkLWdhbGxlcnkvanVzdGlmaWVkLWdhbGxlcnkudGFnLnB1ZyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcmlvdCA9IHJlcXVpcmUoXCJyaW90XCIpO1xuXG5cbnJpb3QudGFnMignanVzdGlmaWVkLWdhbGxlcnknLCAnPGdhbGxlcmllcy1tZW51IGdhbGxlcmllcz1cIntzdG9yZS5jb25maWcuZ2FsbGVyaWVzfVwiIHJvdXRlPVwie3N0b3JlLmNvbmZpZy5yb3V0ZX1cIj48L2dhbGxlcmllcy1tZW51PiA8ZGl2IGRhdGEtaXM9XCJjb250YWluZXJcIiByaW90LXN0eWxlPVwiaGVpZ2h0OiB7c3RvcmUuaGVpZ2h0fXB4OyB3aWR0aDoge3N0b3JlLndpZHRofXB4O1wiIGVudHJpZXM9XCJ7c3RvcmUuZW50cmllc31cIiBwYXRoPVwie3N0b3JlLnBhdGh9XCIgZGlzcGF0Y2hlcj1cIntzdG9yZS5kaXNwYXRjaGVyfVwiIHpvb21fZW5hYmxlZD1cIntzdG9yZS5pc1pvb21FbmFibGVkfVwiPjwvZGl2PiA8ZGl2IGlkPVwiZGVzY2lwdGlvblwiIHJpb3Qtc3R5bGU9XCJ3aWR0aDoge3N0b3JlLndpZHRofXB4XCI+IDxoMyBjbGFzcz1cImhlYWRlclwiPntzdG9yZS5uYW1lfTwvaDM+IDxkaXYgZGF0YS1pcz1cInJhd1wiIGh0bWw9XCJ7c3RvcmUuZGVzY1tzdG9yZS5jb25maWcubGFuZ119XCIgY2xhc3M9XCJib2R5XCI+PC9kaXY+IDwvZGl2PiA8bW9kYWwgaXNfbW9kYWw9XCJ7c3RvcmUuc2hvd01vZGFsfVwiIHpvb21faWQ9XCJ7c3RvcmUuem9vbUlkfVwiIGRpc3BhdGNoZXI9XCJ7c3RvcmUuZGlzcGF0Y2hlcn1cIj48L21vZGFsPicsICcnLCAnJywgZnVuY3Rpb24ob3B0cykge1xudmFyIF90aGlzID0gdGhpcztcblxudmFyIHRocm90dGxlID0gcmVxdWlyZSgnLi4vLi4vbGliL3Rocm90dGxlJyk7XG52YXIgUFJFViA9IHJlcXVpcmUoJy4uLy4uL2NvbnN0YW50cycpLlBSRVY7XG52YXIgTkVYVCA9IHJlcXVpcmUoJy4uLy4uL2NvbnN0YW50cycpLk5FWFQ7XG52YXIgc3RvcmUgPSB0aGlzLnN0b3JlID0gb3B0cy5zdG9yZTtcbnZhciBldmVudCA9IHN0b3JlLmRpc3BhdGNoZXI7XG52YXIga2V5SGFubGVycyA9IHtcbiAgMzc6IGZ1bmN0aW9uIF8oZSkge1xuICAgIHJldHVybiBlLnRyaWdnZXIoZS5TV0lUQ0hfSU1BR0UsIFBSRVYpO1xuICB9LFxuICAzOTogZnVuY3Rpb24gXyhlKSB7XG4gICAgcmV0dXJuIGUudHJpZ2dlcihlLlNXSVRDSF9JTUFHRSwgTkVYVCk7XG4gIH0sXG4gIDI3OiBmdW5jdGlvbiBfKGUpIHtcbiAgICByZXR1cm4gZS50cmlnZ2VyKGUuSU1HX1pPT01fT1VUKTtcbiAgfVxufTtcbnZhciBrZXlIYW5kbGVyID0gZnVuY3Rpb24ga2V5SGFuZGxlcihjb2RlLCBldmVudCkge1xuICByZXR1cm4ga2V5SGFubGVyc1tjb2RlXSAmJiBrZXlIYW5sZXJzW2NvZGVdKGV2ZW50KTtcbn07XG5cbmV2ZW50LnRyaWdnZXIoZXZlbnQuR0FMTEVSWV9JTklUKTtcblxuc3RvcmUub24oc3RvcmUuQ0hBTkdFRF9FVkVOVCwgZnVuY3Rpb24gKCkge1xuICByZXR1cm4gX3RoaXMudXBkYXRlKCk7XG59KTtcblxud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHRocm90dGxlKGZ1bmN0aW9uIChldikge1xuICByZXR1cm4gZXZlbnQudHJpZ2dlcihldmVudC5XSU5ET1dfUkVTSVpFLCBldik7XG59LCAyMDApKTtcblxud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBmdW5jdGlvbiAoZXYpIHtcbiAgcmV0dXJuIGtleUhhbmRsZXIoZXYua2V5Q29kZSwgZXZlbnQpO1xufSwgZmFsc2UpO1xufSk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvbW9kdWxlcy9qdXN0aWZpZWQtZ2FsbGVyeS9qdXN0aWZpZWQtZ2FsbGVyeS50YWcucHVnXG4vLyBtb2R1bGUgaWQgPSAzNFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

eval("var riot = __webpack_require__(0);\n\n\nriot.tag2('modal', '<div id=\"panel\" onclick=\"{zoomOut}\" class=\"modal {opts.is_modal ? \\'show\\' : \\'\\'}\"></div>', '', '', function(opts) {\nvar event = opts.dispatcher;\nvar throttle = __webpack_require__(2);\n\nthis.root.addEventListener('transitionend', throttle(function (ev) {\n  return !opts.is_modal && event.trigger(event.TRANSITION_END);\n}, 20), false);\n\nthis.zoomOut = function () {\n  return event.trigger(event.IMG_ZOOM_OUT);\n};\n});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvam9yZ2UvZGV2L2dhbGwvc3JjL21vZHVsZXMvbW9kYWwvbW9kYWwudGFnLnB1ZyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgcmlvdCA9IHJlcXVpcmUoXCJyaW90XCIpO1xuXG5cbnJpb3QudGFnMignbW9kYWwnLCAnPGRpdiBpZD1cInBhbmVsXCIgb25jbGljaz1cInt6b29tT3V0fVwiIGNsYXNzPVwibW9kYWwge29wdHMuaXNfbW9kYWwgPyBcXCdzaG93XFwnIDogXFwnXFwnfVwiPjwvZGl2PicsICcnLCAnJywgZnVuY3Rpb24ob3B0cykge1xudmFyIGV2ZW50ID0gb3B0cy5kaXNwYXRjaGVyO1xudmFyIHRocm90dGxlID0gcmVxdWlyZSgnLi4vLi4vbGliL3Rocm90dGxlJyk7XG5cbnRoaXMucm9vdC5hZGRFdmVudExpc3RlbmVyKCd0cmFuc2l0aW9uZW5kJywgdGhyb3R0bGUoZnVuY3Rpb24gKGV2KSB7XG4gIHJldHVybiAhb3B0cy5pc19tb2RhbCAmJiBldmVudC50cmlnZ2VyKGV2ZW50LlRSQU5TSVRJT05fRU5EKTtcbn0sIDIwKSwgZmFsc2UpO1xuXG50aGlzLnpvb21PdXQgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBldmVudC50cmlnZ2VyKGV2ZW50LklNR19aT09NX09VVCk7XG59O1xufSk7XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9zcmMvbW9kdWxlcy9tb2RhbC9tb2RhbC50YWcucHVnXG4vLyBtb2R1bGUgaWQgPSAzNVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

eval("var riot = __webpack_require__(0);\n\n\nriot.tag2('raw', '<div id=\"just\" call=\"{this.setInnerHtml(this.opts.html)}\"></div>', '', '', function(opts) {\nvar _this = this;\n\nthis.setInnerHtml = function () {\n  var html = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];\n  return _this.root.innerHTML = html;\n};\n});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvam9yZ2UvZGV2L2dhbGwvc3JjL21vZHVsZXMvcmF3L3Jhdy50YWcucHVnIl0sInNvdXJjZXNDb250ZW50IjpbInZhciByaW90ID0gcmVxdWlyZShcInJpb3RcIik7XG5cblxucmlvdC50YWcyKCdyYXcnLCAnPGRpdiBpZD1cImp1c3RcIiBjYWxsPVwie3RoaXMuc2V0SW5uZXJIdG1sKHRoaXMub3B0cy5odG1sKX1cIj48L2Rpdj4nLCAnJywgJycsIGZ1bmN0aW9uKG9wdHMpIHtcbnZhciBfdGhpcyA9IHRoaXM7XG5cbnRoaXMuc2V0SW5uZXJIdG1sID0gZnVuY3Rpb24gKCkge1xuICB2YXIgaHRtbCA9IGFyZ3VtZW50cy5sZW5ndGggPD0gMCB8fCBhcmd1bWVudHNbMF0gPT09IHVuZGVmaW5lZCA/ICcnIDogYXJndW1lbnRzWzBdO1xuICByZXR1cm4gX3RoaXMucm9vdC5pbm5lckhUTUwgPSBodG1sO1xufTtcbn0pO1xuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vc3JjL21vZHVsZXMvcmF3L3Jhdy50YWcucHVnXG4vLyBtb2R1bGUgaWQgPSAzNlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 37 */
/***/ (function(module, exports) {

eval("/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {/* globals __webpack_amd_options__ */\r\nmodule.exports = __webpack_amd_options__;\r\n\n/* WEBPACK VAR INJECTION */}.call(exports, {}))//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvam9yZ2UvZGV2L2dhbGwvbm9kZV9tb2R1bGVzL3dlYnBhY2svYnVpbGRpbi9hbWQtb3B0aW9ucy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBnbG9iYWxzIF9fd2VicGFja19hbWRfb3B0aW9uc19fICovXHJcbm1vZHVsZS5leHBvcnRzID0gX193ZWJwYWNrX2FtZF9vcHRpb25zX187XHJcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vICh3ZWJwYWNrKS9idWlsZGluL2FtZC1vcHRpb25zLmpzXG4vLyBtb2R1bGUgaWQgPSAzN1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 38 */
/***/ (function(module, exports) {

eval("module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL2hvbWUvam9yZ2UvZGV2L2dhbGwvbm9kZV9tb2R1bGVzL3dlYnBhY2svYnVpbGRpbi9tb2R1bGUuanMiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihtb2R1bGUpIHtcclxuXHRpZighbW9kdWxlLndlYnBhY2tQb2x5ZmlsbCkge1xyXG5cdFx0bW9kdWxlLmRlcHJlY2F0ZSA9IGZ1bmN0aW9uKCkge307XHJcblx0XHRtb2R1bGUucGF0aHMgPSBbXTtcclxuXHRcdC8vIG1vZHVsZS5wYXJlbnQgPSB1bmRlZmluZWQgYnkgZGVmYXVsdFxyXG5cdFx0aWYoIW1vZHVsZS5jaGlsZHJlbikgbW9kdWxlLmNoaWxkcmVuID0gW107XHJcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImxvYWRlZFwiLCB7XHJcblx0XHRcdGVudW1lcmFibGU6IHRydWUsXHJcblx0XHRcdGdldDogZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0cmV0dXJuIG1vZHVsZS5sO1xyXG5cdFx0XHR9XHJcblx0XHR9KTtcclxuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShtb2R1bGUsIFwiaWRcIiwge1xyXG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxyXG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdHJldHVybiBtb2R1bGUuaTtcclxuXHRcdFx0fVxyXG5cdFx0fSk7XHJcblx0XHRtb2R1bGUud2VicGFja1BvbHlmaWxsID0gMTtcclxuXHR9XHJcblx0cmV0dXJuIG1vZHVsZTtcclxufTtcclxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gKHdlYnBhY2spL2J1aWxkaW4vbW9kdWxlLmpzXG4vLyBtb2R1bGUgaWQgPSAzOFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(4);


/***/ })
/******/ ]);